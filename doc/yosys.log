
 /----------------------------------------------------------------------------\
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |  Copyright (C) 2012 - 2024  Claire Xenia Wolf <claire@yosyshq.com>         |
 |  Distributed under an ISC-like license, type "license" to see terms        |
 \----------------------------------------------------------------------------/
 Yosys 0.47+135 (git sha1 6f3376cbe, aarch64-linux-gnu-g++ 11.4.0-1ubuntu1~22.04 -fPIC -O3)

-- Running command `read -define ICE40' --

-- Parsing `pico_ice.v' using frontend ` -vlog2k' --

1. Executing Verilog-2005 frontend: pico_ice.v
Parsing Verilog input from `pico_ice.v' to AST representation.
Storing AST representation for module `$abstract\nanoV_top'.
Successfully finished Verilog frontend.

-- Parsing `../core.v' using frontend ` -vlog2k' --

2. Executing Verilog-2005 frontend: ../core.v
Parsing Verilog input from `../core.v' to AST representation.
Storing AST representation for module `$abstract\nanoV_core'.
Successfully finished Verilog frontend.

-- Parsing `../alu.v' using frontend ` -vlog2k' --

3. Executing Verilog-2005 frontend: ../alu.v
Parsing Verilog input from `../alu.v' to AST representation.
Storing AST representation for module `$abstract\nanoV_alu'.
Successfully finished Verilog frontend.

-- Parsing `../register.v' using frontend ` -vlog2k' --

4. Executing Verilog-2005 frontend: ../register.v
Parsing Verilog input from `../register.v' to AST representation.
Storing AST representation for module `$abstract\nanoV_registers'.
Successfully finished Verilog frontend.

-- Parsing `../shift.v' using frontend ` -vlog2k' --

5. Executing Verilog-2005 frontend: ../shift.v
Parsing Verilog input from `../shift.v' to AST representation.
Storing AST representation for module `$abstract\nanoV_shift'.
Successfully finished Verilog frontend.

-- Parsing `../multiply.v' using frontend ` -vlog2k' --

6. Executing Verilog-2005 frontend: ../multiply.v
Parsing Verilog input from `../multiply.v' to AST representation.
Storing AST representation for module `$abstract\nanoV_mul'.
Successfully finished Verilog frontend.

-- Parsing `../cpu.v' using frontend ` -vlog2k' --

7. Executing Verilog-2005 frontend: ../cpu.v
Parsing Verilog input from `../cpu.v' to AST representation.
Storing AST representation for module `$abstract\nanoV_cpu'.
Successfully finished Verilog frontend.

-- Parsing `../uart/uart_tx.v' using frontend ` -vlog2k' --

8. Executing Verilog-2005 frontend: ../uart/uart_tx.v
Parsing Verilog input from `../uart/uart_tx.v' to AST representation.
Storing AST representation for module `$abstract\uart_tx'.
Successfully finished Verilog frontend.

-- Parsing `../uart/uart_rx.v' using frontend ` -vlog2k' --

9. Executing Verilog-2005 frontend: ../uart/uart_rx.v
Parsing Verilog input from `../uart/uart_rx.v' to AST representation.
Storing AST representation for module `$abstract\uart_rx'.
Successfully finished Verilog frontend.

-- Running command `synth_ice40 -abc9 -device u -top nanoV_top -json nanoV.json' --

10. Executing SYNTH_ICE40 pass.

10.1. Executing Verilog-2005 frontend: /home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v
Parsing Verilog input from `/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\SB_IO'.
Generating RTLIL representation for module `\SB_GB_IO'.
Generating RTLIL representation for module `\SB_GB'.
Generating RTLIL representation for module `\SB_LUT4'.
Generating RTLIL representation for module `\SB_CARRY'.
Generating RTLIL representation for module `\SB_DFF'.
Generating RTLIL representation for module `\SB_DFFE'.
Generating RTLIL representation for module `\SB_DFFSR'.
Generating RTLIL representation for module `\SB_DFFR'.
Generating RTLIL representation for module `\SB_DFFSS'.
Generating RTLIL representation for module `\SB_DFFS'.
Generating RTLIL representation for module `\SB_DFFESR'.
Generating RTLIL representation for module `\SB_DFFER'.
Generating RTLIL representation for module `\SB_DFFESS'.
Generating RTLIL representation for module `\SB_DFFES'.
Generating RTLIL representation for module `\SB_DFFN'.
Generating RTLIL representation for module `\SB_DFFNE'.
Generating RTLIL representation for module `\SB_DFFNSR'.
Generating RTLIL representation for module `\SB_DFFNR'.
Generating RTLIL representation for module `\SB_DFFNSS'.
Generating RTLIL representation for module `\SB_DFFNS'.
Generating RTLIL representation for module `\SB_DFFNESR'.
Generating RTLIL representation for module `\SB_DFFNER'.
Generating RTLIL representation for module `\SB_DFFNESS'.
Generating RTLIL representation for module `\SB_DFFNES'.
Generating RTLIL representation for module `\SB_RAM40_4K'.
Generating RTLIL representation for module `\SB_RAM40_4KNR'.
Generating RTLIL representation for module `\SB_RAM40_4KNW'.
Generating RTLIL representation for module `\SB_RAM40_4KNRNW'.
Generating RTLIL representation for module `\ICESTORM_LC'.
Generating RTLIL representation for module `\SB_PLL40_CORE'.
Generating RTLIL representation for module `\SB_PLL40_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2F_CORE'.
Generating RTLIL representation for module `\SB_PLL40_2F_PAD'.
Generating RTLIL representation for module `\SB_WARMBOOT'.
Generating RTLIL representation for module `\SB_SPRAM256KA'.
Generating RTLIL representation for module `\SB_HFOSC'.
Generating RTLIL representation for module `\SB_LFOSC'.
Generating RTLIL representation for module `\SB_RGBA_DRV'.
Generating RTLIL representation for module `\SB_LED_DRV_CUR'.
Generating RTLIL representation for module `\SB_RGB_DRV'.
Generating RTLIL representation for module `\SB_I2C'.
Generating RTLIL representation for module `\SB_SPI'.
Generating RTLIL representation for module `\SB_LEDDA_IP'.
Generating RTLIL representation for module `\SB_FILTER_50NS'.
Generating RTLIL representation for module `\SB_IO_I3C'.
Generating RTLIL representation for module `\SB_IO_OD'.
Generating RTLIL representation for module `\SB_MAC16'.
Generating RTLIL representation for module `\ICESTORM_RAM'.
Successfully finished Verilog frontend.

10.2. Executing HIERARCHY pass (managing design hierarchy).

10.3. Executing AST frontend in derive mode using pre-parsed AST for module `\nanoV_top'.
Generating RTLIL representation for module `\nanoV_top'.

10.3.1. Analyzing design hierarchy..
Top module:  \nanoV_top
Parameter \BIT_RATE = 93750
Parameter \CLK_HZ = 12000000

10.3.2. Executing AST frontend in derive mode using pre-parsed AST for module `\uart_rx'.
Parameter \BIT_RATE = 93750
Parameter \CLK_HZ = 12000000
Generating RTLIL representation for module `$paramod$ce6830bd8bd018e3cc0f9c5605fbb87f31d5ce1b\uart_rx'.
Parameter \BIT_RATE = 93750
Parameter \CLK_HZ = 12000000

10.3.3. Executing AST frontend in derive mode using pre-parsed AST for module `\uart_tx'.
Parameter \BIT_RATE = 93750
Parameter \CLK_HZ = 12000000
Generating RTLIL representation for module `$paramod$ce6830bd8bd018e3cc0f9c5605fbb87f31d5ce1b\uart_tx'.
Parameter \NUM_REGS = 16

10.3.4. Executing AST frontend in derive mode using pre-parsed AST for module `\nanoV_cpu'.
Parameter \NUM_REGS = 16
Generating RTLIL representation for module `$paramod\nanoV_cpu\NUM_REGS=s32'00000000000000000000000000010000'.

10.3.5. Analyzing design hierarchy..
Top module:  \nanoV_top
Used module:     $paramod$ce6830bd8bd018e3cc0f9c5605fbb87f31d5ce1b\uart_rx
Used module:     $paramod$ce6830bd8bd018e3cc0f9c5605fbb87f31d5ce1b\uart_tx
Used module:     $paramod\nanoV_cpu\NUM_REGS=s32'00000000000000000000000000010000
Parameter \NUM_REGS = 16
Parameter \REG_ADDR_BITS = 4

10.3.6. Executing AST frontend in derive mode using pre-parsed AST for module `\nanoV_core'.
Parameter \NUM_REGS = 16
Parameter \REG_ADDR_BITS = 4
Generating RTLIL representation for module `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_core'.

10.3.7. Analyzing design hierarchy..
Top module:  \nanoV_top
Used module:     $paramod$ce6830bd8bd018e3cc0f9c5605fbb87f31d5ce1b\uart_rx
Used module:     $paramod$ce6830bd8bd018e3cc0f9c5605fbb87f31d5ce1b\uart_tx
Used module:     $paramod\nanoV_cpu\NUM_REGS=s32'00000000000000000000000000010000
Used module:         $paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_core
Parameter \A_BITS = 16

10.3.8. Executing AST frontend in derive mode using pre-parsed AST for module `\nanoV_mul'.
Parameter \A_BITS = 16
Generating RTLIL representation for module `$paramod\nanoV_mul\A_BITS=s32'00000000000000000000000000010000'.

10.3.9. Executing AST frontend in derive mode using pre-parsed AST for module `\nanoV_shift'.
Generating RTLIL representation for module `\nanoV_shift'.

10.3.10. Executing AST frontend in derive mode using pre-parsed AST for module `\nanoV_alu'.
Generating RTLIL representation for module `\nanoV_alu'.
Parameter \NUM_REGS = 16
Parameter \REG_ADDR_BITS = 4

10.3.11. Executing AST frontend in derive mode using pre-parsed AST for module `\nanoV_registers'.
Parameter \NUM_REGS = 16
Parameter \REG_ADDR_BITS = 4
Generating RTLIL representation for module `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers'.
Warning: Replacing memory \registers with list of registers. See ../register.v:125

10.3.12. Analyzing design hierarchy..
Top module:  \nanoV_top
Used module:     $paramod$ce6830bd8bd018e3cc0f9c5605fbb87f31d5ce1b\uart_rx
Used module:     $paramod$ce6830bd8bd018e3cc0f9c5605fbb87f31d5ce1b\uart_tx
Used module:     $paramod\nanoV_cpu\NUM_REGS=s32'00000000000000000000000000010000
Used module:         $paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_core
Used module:             $paramod\nanoV_mul\A_BITS=s32'00000000000000000000000000010000
Used module:             \nanoV_shift
Used module:             \nanoV_alu
Used module:             $paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers

10.3.13. Analyzing design hierarchy..
Top module:  \nanoV_top
Used module:     $paramod$ce6830bd8bd018e3cc0f9c5605fbb87f31d5ce1b\uart_rx
Used module:     $paramod$ce6830bd8bd018e3cc0f9c5605fbb87f31d5ce1b\uart_tx
Used module:     $paramod\nanoV_cpu\NUM_REGS=s32'00000000000000000000000000010000
Used module:         $paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_core
Used module:             $paramod\nanoV_mul\A_BITS=s32'00000000000000000000000000010000
Used module:             \nanoV_shift
Used module:             \nanoV_alu
Used module:             $paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers
Removing unused module `$abstract\uart_rx'.
Removing unused module `$abstract\uart_tx'.
Removing unused module `$abstract\nanoV_cpu'.
Removing unused module `$abstract\nanoV_mul'.
Removing unused module `$abstract\nanoV_shift'.
Removing unused module `$abstract\nanoV_registers'.
Removing unused module `$abstract\nanoV_alu'.
Removing unused module `$abstract\nanoV_core'.
Removing unused module `$abstract\nanoV_top'.
Removed 9 unused modules.
Mapping positional arguments of cell $paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_core.multiplier ($paramod\nanoV_mul\A_BITS=s32'00000000000000000000000000010000).
Mapping positional arguments of cell $paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_core.shifter (nanoV_shift).
Mapping positional arguments of cell $paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_core.alu (nanoV_alu).
Mapping positional arguments of cell $paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_core.i_registers ($paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers).
Mapping positional arguments of cell $paramod\nanoV_cpu\NUM_REGS=s32'00000000000000000000000000010000.core ($paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_core).

10.4. Executing PROC pass (convert processes to netlists).

10.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

10.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1414$240 in module SB_DFFNES.
Marked 1 switch rules as full_case in process $proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1353$235 in module SB_DFFNESS.
Marked 1 switch rules as full_case in process $proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1273$231 in module SB_DFFNER.
Marked 1 switch rules as full_case in process $proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1212$226 in module SB_DFFNESR.
Marked 1 switch rules as full_case in process $proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1138$223 in module SB_DFFNS.
Marked 1 switch rules as full_case in process $proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1088$220 in module SB_DFFNSS.
Marked 1 switch rules as full_case in process $proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1017$217 in module SB_DFFNR.
Marked 1 switch rules as full_case in process $proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:967$214 in module SB_DFFNSR.
Marked 1 switch rules as full_case in process $proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:803$206 in module SB_DFFES.
Marked 1 switch rules as full_case in process $proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:742$201 in module SB_DFFESS.
Marked 1 switch rules as full_case in process $proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:662$197 in module SB_DFFER.
Marked 1 switch rules as full_case in process $proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:601$192 in module SB_DFFESR.
Marked 1 switch rules as full_case in process $proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:527$189 in module SB_DFFS.
Marked 1 switch rules as full_case in process $proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:477$186 in module SB_DFFSS.
Marked 1 switch rules as full_case in process $proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:406$183 in module SB_DFFR.
Marked 1 switch rules as full_case in process $proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:356$180 in module SB_DFFSR.
Removed 1 dead cases from process $proc$../register.v:0$901 in module $paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.
Marked 1 switch rules as full_case in process $proc$../register.v:0$901 in module $paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.
Removed 1 dead cases from process $proc$../register.v:0$898 in module $paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.
Marked 1 switch rules as full_case in process $proc$../register.v:0$898 in module $paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.
Marked 2 switch rules as full_case in process $proc$../register.v:123$893 in module $paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.
Marked 2 switch rules as full_case in process $proc$../register.v:123$888 in module $paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.
Marked 2 switch rules as full_case in process $proc$../register.v:123$883 in module $paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.
Marked 2 switch rules as full_case in process $proc$../register.v:123$878 in module $paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.
Marked 2 switch rules as full_case in process $proc$../register.v:123$873 in module $paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.
Marked 2 switch rules as full_case in process $proc$../register.v:123$868 in module $paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.
Marked 2 switch rules as full_case in process $proc$../register.v:123$863 in module $paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.
Marked 2 switch rules as full_case in process $proc$../register.v:123$858 in module $paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.
Marked 2 switch rules as full_case in process $proc$../register.v:123$853 in module $paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.
Marked 2 switch rules as full_case in process $proc$../register.v:123$848 in module $paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.
Marked 2 switch rules as full_case in process $proc$../register.v:123$843 in module $paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.
Marked 2 switch rules as full_case in process $proc$../register.v:123$838 in module $paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.
Marked 2 switch rules as full_case in process $proc$../register.v:123$833 in module $paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.
Marked 1 switch rules as full_case in process $proc$../alu.v:0$807 in module nanoV_alu.
Marked 1 switch rules as full_case in process $proc$../core.v:112$774 in module $paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_core.
Marked 1 switch rules as full_case in process $proc$../core.v:81$724 in module $paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_core.
Marked 1 switch rules as full_case in process $proc$../cpu.v:243$642 in module $paramod\nanoV_cpu\NUM_REGS=s32'00000000000000000000000000010000.
Marked 16 switch rules as full_case in process $proc$../cpu.v:136$598 in module $paramod\nanoV_cpu\NUM_REGS=s32'00000000000000000000000000010000.
Marked 6 switch rules as full_case in process $proc$../cpu.v:55$513 in module $paramod\nanoV_cpu\NUM_REGS=s32'00000000000000000000000000010000.
Marked 1 switch rules as full_case in process $proc$../cpu.v:25$482 in module $paramod\nanoV_cpu\NUM_REGS=s32'00000000000000000000000000010000.
Marked 3 switch rules as full_case in process $proc$../uart/uart_tx.v:150$474 in module $paramod$ce6830bd8bd018e3cc0f9c5605fbb87f31d5ce1b\uart_tx.
Marked 5 switch rules as full_case in process $proc$../uart/uart_tx.v:139$461 in module $paramod$ce6830bd8bd018e3cc0f9c5605fbb87f31d5ce1b\uart_tx.
Marked 2 switch rules as full_case in process $proc$../uart/uart_tx.v:126$457 in module $paramod$ce6830bd8bd018e3cc0f9c5605fbb87f31d5ce1b\uart_tx.
Marked 2 switch rules as full_case in process $proc$../uart/uart_tx.v:113$449 in module $paramod$ce6830bd8bd018e3cc0f9c5605fbb87f31d5ce1b\uart_tx.
Marked 1 switch rules as full_case in process $proc$../uart/uart_rx.v:176$444 in module $paramod$ce6830bd8bd018e3cc0f9c5605fbb87f31d5ce1b\uart_rx.
Marked 1 switch rules as full_case in process $proc$../uart/uart_rx.v:166$441 in module $paramod$ce6830bd8bd018e3cc0f9c5605fbb87f31d5ce1b\uart_rx.
Marked 2 switch rules as full_case in process $proc$../uart/uart_rx.v:157$429 in module $paramod$ce6830bd8bd018e3cc0f9c5605fbb87f31d5ce1b\uart_rx.
Marked 2 switch rules as full_case in process $proc$../uart/uart_rx.v:144$422 in module $paramod$ce6830bd8bd018e3cc0f9c5605fbb87f31d5ce1b\uart_rx.
Marked 1 switch rules as full_case in process $proc$../uart/uart_rx.v:133$420 in module $paramod$ce6830bd8bd018e3cc0f9c5605fbb87f31d5ce1b\uart_rx.
Marked 2 switch rules as full_case in process $proc$../uart/uart_rx.v:121$413 in module $paramod$ce6830bd8bd018e3cc0f9c5605fbb87f31d5ce1b\uart_rx.
Marked 5 switch rules as full_case in process $proc$pico_ice.v:73$386 in module nanoV_top.
Marked 1 switch rules as full_case in process $proc$pico_ice.v:34$383 in module nanoV_top.
Removed a total of 2 dead cases.

10.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 33 redundant assignments.
Promoted 73 assignments to connections.

10.4.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\SB_DFFNES.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$243'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNESS.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$239'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNER.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$234'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNESR.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$230'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNS.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$225'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNSS.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$222'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNR.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$219'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNSR.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$216'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNE.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$213'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFN.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$211'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFES.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$209'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFESS.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$205'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFER.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$200'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFESR.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$196'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFS.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$191'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFSS.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$188'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFR.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$185'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFSR.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$182'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFE.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$179'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFF.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$177'.
  Set init value: \Q = 1'0

10.4.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \S in `\SB_DFFNES.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1414$240'.
Found async reset \R in `\SB_DFFNER.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1273$231'.
Found async reset \S in `\SB_DFFNS.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1138$223'.
Found async reset \R in `\SB_DFFNR.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1017$217'.
Found async reset \S in `\SB_DFFES.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:803$206'.
Found async reset \R in `\SB_DFFER.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:662$197'.
Found async reset \S in `\SB_DFFS.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:527$189'.
Found async reset \R in `\SB_DFFR.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:406$183'.

10.4.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.
<suppressed ~115 debug messages>

10.4.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\SB_DFFNES.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$243'.
Creating decoders for process `\SB_DFFNES.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1414$240'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNESS.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$239'.
Creating decoders for process `\SB_DFFNESS.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1353$235'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNER.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$234'.
Creating decoders for process `\SB_DFFNER.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1273$231'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNESR.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$230'.
Creating decoders for process `\SB_DFFNESR.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1212$226'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNS.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$225'.
Creating decoders for process `\SB_DFFNS.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1138$223'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNSS.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$222'.
Creating decoders for process `\SB_DFFNSS.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1088$220'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNR.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$219'.
Creating decoders for process `\SB_DFFNR.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1017$217'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNSR.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$216'.
Creating decoders for process `\SB_DFFNSR.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:967$214'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNE.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$213'.
Creating decoders for process `\SB_DFFNE.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:922$212'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFN.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$211'.
Creating decoders for process `\SB_DFFN.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:882$210'.
Creating decoders for process `\SB_DFFES.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$209'.
Creating decoders for process `\SB_DFFES.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:803$206'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFESS.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$205'.
Creating decoders for process `\SB_DFFESS.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:742$201'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFER.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$200'.
Creating decoders for process `\SB_DFFER.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:662$197'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFESR.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$196'.
Creating decoders for process `\SB_DFFESR.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:601$192'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFS.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$191'.
Creating decoders for process `\SB_DFFS.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:527$189'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFSS.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$188'.
Creating decoders for process `\SB_DFFSS.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:477$186'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFR.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$185'.
Creating decoders for process `\SB_DFFR.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:406$183'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFSR.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$182'.
Creating decoders for process `\SB_DFFSR.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:356$180'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFE.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$179'.
Creating decoders for process `\SB_DFFE.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:311$178'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFF.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$177'.
Creating decoders for process `\SB_DFF.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:271$176'.
Creating decoders for process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.$proc$../register.v:0$904'.
Creating decoders for process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.$proc$../register.v:0$901'.
     1/1: $1$mem2reg_rd$\reg_access$../register.v:143$819_DATA[31:0]$903
Creating decoders for process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.$proc$../register.v:0$898'.
     1/1: $1$mem2reg_rd$\reg_access$../register.v:142$818_DATA[31:0]$900
Creating decoders for process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.$proc$../register.v:123$893'.
     1/2: $0\registers[15][31:0] [1]
     2/2: $0\registers[15][31:0] [0]
Creating decoders for process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.$proc$../register.v:123$888'.
     1/2: $0\registers[14][31:0] [1]
     2/2: $0\registers[14][31:0] [0]
Creating decoders for process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.$proc$../register.v:123$883'.
     1/2: $0\registers[13][31:0] [1]
     2/2: $0\registers[13][31:0] [0]
Creating decoders for process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.$proc$../register.v:123$878'.
     1/2: $0\registers[12][31:0] [1]
     2/2: $0\registers[12][31:0] [0]
Creating decoders for process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.$proc$../register.v:123$873'.
     1/2: $0\registers[11][31:0] [1]
     2/2: $0\registers[11][31:0] [0]
Creating decoders for process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.$proc$../register.v:123$868'.
     1/2: $0\registers[10][31:0] [1]
     2/2: $0\registers[10][31:0] [0]
Creating decoders for process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.$proc$../register.v:123$863'.
     1/2: $0\registers[9][31:0] [1]
     2/2: $0\registers[9][31:0] [0]
Creating decoders for process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.$proc$../register.v:123$858'.
     1/2: $0\registers[8][31:0] [1]
     2/2: $0\registers[8][31:0] [0]
Creating decoders for process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.$proc$../register.v:123$853'.
     1/2: $0\registers[7][31:0] [1]
     2/2: $0\registers[7][31:0] [0]
Creating decoders for process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.$proc$../register.v:123$848'.
     1/2: $0\registers[6][31:0] [1]
     2/2: $0\registers[6][31:0] [0]
Creating decoders for process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.$proc$../register.v:123$843'.
     1/2: $0\registers[5][31:0] [1]
     2/2: $0\registers[5][31:0] [0]
Creating decoders for process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.$proc$../register.v:123$838'.
     1/2: $0\registers[2][31:0] [1]
     2/2: $0\registers[2][31:0] [0]
Creating decoders for process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.$proc$../register.v:123$833'.
     1/2: $0\registers[1][31:0] [1]
     2/2: $0\registers[1][31:0] [0]
Creating decoders for process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.$proc$../register.v:43$830'.
Creating decoders for process `\nanoV_alu.$proc$../alu.v:0$807'.
     1/1: $1\operate$func$../alu.v:44$799.$result[0:0]$814
Creating decoders for process `$paramod\nanoV_mul\A_BITS=s32'00000000000000000000000000010000.$proc$../multiply.v:37$786'.
Creating decoders for process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_core.$proc$../core.v:112$774'.
     1/3: $0\stored_data[31:0] [30:1]
     2/3: $0\stored_data[31:0] [0]
     3/3: $0\stored_data[31:0] [31]
Creating decoders for process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_core.$proc$../core.v:88$725'.
     1/2: $0\shift_amt_reg[4:0] [4]
     2/2: $0\shift_amt_reg[4:0] [3:0]
Creating decoders for process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_core.$proc$../core.v:81$724'.
     1/1: $0\is_equal_reg[0:0]
Creating decoders for process `$paramod\nanoV_cpu\NUM_REGS=s32'00000000000000000000000000010000.$proc$../cpu.v:243$642'.
     1/1: $0\next_instr[31:0]
Creating decoders for process `$paramod\nanoV_cpu\NUM_REGS=s32'00000000000000000000000000010000.$proc$../cpu.v:231$627'.
Creating decoders for process `$paramod\nanoV_cpu\NUM_REGS=s32'00000000000000000000000000010000.$proc$../cpu.v:136$598'.
     1/11: $0\pc[21:0]
     2/11: $0\data_xfer[0:0]
     3/11: $0\starting_data_stream[0:0]
     4/11: $0\start_data_stream[0:0]
     5/11: $0\first_instr[1:0]
     6/11: $0\read_instr[0:0]
     7/11: $0\starting_instr_stream[0:0]
     8/11: $0\start_instr_stream[0:0]
     9/11: $0\use_ext_data_in_reg[0:0]
    10/11: $0\spi_clk_enable[0:0]
    11/11: $0\spi_select[0:0]
Creating decoders for process `$paramod\nanoV_cpu\NUM_REGS=s32'00000000000000000000000000010000.$proc$../cpu.v:94$569'.
Creating decoders for process `$paramod\nanoV_cpu\NUM_REGS=s32'00000000000000000000000000010000.$proc$../cpu.v:55$513'.
     1/11: $6\cycles_for_instr$func$../cpu.v:64$480.$result[2:0]$541
     2/11: $5\cycles_for_instr$func$../cpu.v:64$480.$result[2:0]$531
     3/11: $4\cycles_for_instr$func$../cpu.v:64$480.$result[2:0]$525
     4/11: $3\cycles_for_instr$func$../cpu.v:64$480.$result[2:0]$523
     5/11: $2\cycles_for_instr$func$../cpu.v:64$480.$result[2:0]$520
     6/11: $2\cycles_for_instr$func$../cpu.v:64$480.instr[29:0]$521
     7/11: $0\cycle[2:0]
     8/11: $1\cycles_for_instr$func$../cpu.v:64$480.instr[29:0]$518
     9/11: $1\cycles_for_instr$func$../cpu.v:64$480.$result[2:0]$517
    10/11: $0\instr[29:0]
    11/11: $0\instr_cycles_reg[2:0]
Creating decoders for process `$paramod\nanoV_cpu\NUM_REGS=s32'00000000000000000000000000010000.$proc$../cpu.v:25$482'.
     1/1: $0\counter[4:0]
Creating decoders for process `$paramod$ce6830bd8bd018e3cc0f9c5605fbb87f31d5ce1b\uart_tx.$proc$../uart/uart_tx.v:150$474'.
     1/1: $0\txd_reg[0:0]
Creating decoders for process `$paramod$ce6830bd8bd018e3cc0f9c5605fbb87f31d5ce1b\uart_tx.$proc$../uart/uart_tx.v:139$461'.
     1/7: $5\next_fsm_state$func$../uart/uart_tx.v:143$446.$result[3:0]$472
     2/7: $4\next_fsm_state$func$../uart/uart_tx.v:143$446.$result[3:0]$470
     3/7: $3\next_fsm_state$func$../uart/uart_tx.v:143$446.$result[3:0]$469
     4/7: $2\next_fsm_state$func$../uart/uart_tx.v:143$446.$result[3:0]$468
     5/7: $0\fsm_state[3:0]
     6/7: $1\next_fsm_state$func$../uart/uart_tx.v:143$446.tx_en[0:0]$466
     7/7: $1\next_fsm_state$func$../uart/uart_tx.v:143$446.$result[3:0]$465
Creating decoders for process `$paramod$ce6830bd8bd018e3cc0f9c5605fbb87f31d5ce1b\uart_tx.$proc$../uart/uart_tx.v:126$457'.
     1/1: $0\cycle_counter[7:0]
Creating decoders for process `$paramod$ce6830bd8bd018e3cc0f9c5605fbb87f31d5ce1b\uart_tx.$proc$../uart/uart_tx.v:113$449'.
     1/1: $0\data_to_send[7:0]
Creating decoders for process `$paramod$ce6830bd8bd018e3cc0f9c5605fbb87f31d5ce1b\uart_rx.$proc$../uart/uart_rx.v:176$444'.
     1/1: $0\rxd_reg[1:0]
Creating decoders for process `$paramod$ce6830bd8bd018e3cc0f9c5605fbb87f31d5ce1b\uart_rx.$proc$../uart/uart_rx.v:166$441'.
     1/1: $0\uart_rts[0:0]
Creating decoders for process `$paramod$ce6830bd8bd018e3cc0f9c5605fbb87f31d5ce1b\uart_rx.$proc$../uart/uart_rx.v:157$429'.
     1/3: $2\next_fsm_state$func$../uart/uart_rx.v:161$409.$result[3:0]$433
     2/3: $0\fsm_state[3:0]
     3/3: $1\next_fsm_state$func$../uart/uart_rx.v:161$409.$result[3:0]$432
Creating decoders for process `$paramod$ce6830bd8bd018e3cc0f9c5605fbb87f31d5ce1b\uart_rx.$proc$../uart/uart_rx.v:144$422'.
     1/1: $0\cycle_counter[7:0]
Creating decoders for process `$paramod$ce6830bd8bd018e3cc0f9c5605fbb87f31d5ce1b\uart_rx.$proc$../uart/uart_rx.v:133$420'.
     1/1: $0\bit_sample[0:0]
Creating decoders for process `$paramod$ce6830bd8bd018e3cc0f9c5605fbb87f31d5ce1b\uart_rx.$proc$../uart/uart_rx.v:121$413'.
     1/1: $0\recieved_data[7:0]
Creating decoders for process `\nanoV_top.$proc$pico_ice.v:73$386'.
     1/2: $0\connect_peripheral[2:0]
     2/2: $0\output_data[7:0]
Creating decoders for process `\nanoV_top.$proc$pico_ice.v:40$385'.
Creating decoders for process `\nanoV_top.$proc$pico_ice.v:34$383'.
     1/1: $0\spi_select[0:0]
Creating decoders for process `\nanoV_top.$proc$pico_ice.v:30$382'.

10.4.8. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.\reg_access[0]' from process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.$proc$../register.v:0$904'.
No latch inferred for signal `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.\reg_access[1]' from process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.$proc$../register.v:0$904'.
No latch inferred for signal `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.\reg_access[2]' from process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.$proc$../register.v:0$904'.
No latch inferred for signal `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.\reg_access[3]' from process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.$proc$../register.v:0$904'.
No latch inferred for signal `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.\reg_access[4]' from process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.$proc$../register.v:0$904'.
No latch inferred for signal `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.\reg_access[5]' from process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.$proc$../register.v:0$904'.
No latch inferred for signal `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.\reg_access[6]' from process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.$proc$../register.v:0$904'.
No latch inferred for signal `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.\reg_access[7]' from process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.$proc$../register.v:0$904'.
No latch inferred for signal `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.\reg_access[8]' from process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.$proc$../register.v:0$904'.
No latch inferred for signal `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.\reg_access[9]' from process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.$proc$../register.v:0$904'.
No latch inferred for signal `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.\reg_access[10]' from process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.$proc$../register.v:0$904'.
No latch inferred for signal `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.\reg_access[11]' from process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.$proc$../register.v:0$904'.
No latch inferred for signal `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.\reg_access[12]' from process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.$proc$../register.v:0$904'.
No latch inferred for signal `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.\reg_access[13]' from process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.$proc$../register.v:0$904'.
No latch inferred for signal `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.\reg_access[14]' from process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.$proc$../register.v:0$904'.
No latch inferred for signal `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.\reg_access[15]' from process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.$proc$../register.v:0$904'.
No latch inferred for signal `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.$mem2reg_rd$\reg_access$../register.v:143$819_DATA' from process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.$proc$../register.v:0$901'.
No latch inferred for signal `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.$mem2reg_rd$\reg_access$../register.v:142$818_DATA' from process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.$proc$../register.v:0$898'.
No latch inferred for signal `\nanoV_alu.\operate$func$../alu.v:44$798.$result' from process `\nanoV_alu.$proc$../alu.v:0$807'.
No latch inferred for signal `\nanoV_alu.\operate$func$../alu.v:44$799.$result' from process `\nanoV_alu.$proc$../alu.v:0$807'.
No latch inferred for signal `\nanoV_alu.\operate$func$../alu.v:44$799.op_op' from process `\nanoV_alu.$proc$../alu.v:0$807'.
No latch inferred for signal `\nanoV_alu.\operate$func$../alu.v:44$799.op_a' from process `\nanoV_alu.$proc$../alu.v:0$807'.
No latch inferred for signal `\nanoV_alu.\operate$func$../alu.v:44$799.op_b' from process `\nanoV_alu.$proc$../alu.v:0$807'.
No latch inferred for signal `\nanoV_alu.\operate$func$../alu.v:44$799.op_s' from process `\nanoV_alu.$proc$../alu.v:0$807'.

10.4.9. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\SB_DFFNES.\Q' using process `\SB_DFFNES.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1414$240'.
  created $adff cell `$procdff$1621' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNESS.\Q' using process `\SB_DFFNESS.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1353$235'.
  created $dff cell `$procdff$1622' with negative edge clock.
Creating register for signal `\SB_DFFNER.\Q' using process `\SB_DFFNER.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1273$231'.
  created $adff cell `$procdff$1625' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNESR.\Q' using process `\SB_DFFNESR.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1212$226'.
  created $dff cell `$procdff$1626' with negative edge clock.
Creating register for signal `\SB_DFFNS.\Q' using process `\SB_DFFNS.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1138$223'.
  created $adff cell `$procdff$1629' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNSS.\Q' using process `\SB_DFFNSS.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1088$220'.
  created $dff cell `$procdff$1630' with negative edge clock.
Creating register for signal `\SB_DFFNR.\Q' using process `\SB_DFFNR.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1017$217'.
  created $adff cell `$procdff$1633' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNSR.\Q' using process `\SB_DFFNSR.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:967$214'.
  created $dff cell `$procdff$1634' with negative edge clock.
Creating register for signal `\SB_DFFNE.\Q' using process `\SB_DFFNE.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:922$212'.
  created $dff cell `$procdff$1635' with negative edge clock.
Creating register for signal `\SB_DFFN.\Q' using process `\SB_DFFN.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:882$210'.
  created $dff cell `$procdff$1636' with negative edge clock.
Creating register for signal `\SB_DFFES.\Q' using process `\SB_DFFES.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:803$206'.
  created $adff cell `$procdff$1639' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFESS.\Q' using process `\SB_DFFESS.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:742$201'.
  created $dff cell `$procdff$1640' with positive edge clock.
Creating register for signal `\SB_DFFER.\Q' using process `\SB_DFFER.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:662$197'.
  created $adff cell `$procdff$1643' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFESR.\Q' using process `\SB_DFFESR.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:601$192'.
  created $dff cell `$procdff$1644' with positive edge clock.
Creating register for signal `\SB_DFFS.\Q' using process `\SB_DFFS.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:527$189'.
  created $adff cell `$procdff$1647' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFSS.\Q' using process `\SB_DFFSS.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:477$186'.
  created $dff cell `$procdff$1648' with positive edge clock.
Creating register for signal `\SB_DFFR.\Q' using process `\SB_DFFR.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:406$183'.
  created $adff cell `$procdff$1651' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFSR.\Q' using process `\SB_DFFSR.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:356$180'.
  created $dff cell `$procdff$1652' with positive edge clock.
Creating register for signal `\SB_DFFE.\Q' using process `\SB_DFFE.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:311$178'.
  created $dff cell `$procdff$1653' with positive edge clock.
Creating register for signal `\SB_DFF.\Q' using process `\SB_DFF.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:271$176'.
  created $dff cell `$procdff$1654' with positive edge clock.
Creating register for signal `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.\registers[15]' using process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.$proc$../register.v:123$893'.
  created $dff cell `$procdff$1655' with positive edge clock.
Creating register for signal `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.\registers[14]' using process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.$proc$../register.v:123$888'.
  created $dff cell `$procdff$1656' with positive edge clock.
Creating register for signal `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.\registers[13]' using process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.$proc$../register.v:123$883'.
  created $dff cell `$procdff$1657' with positive edge clock.
Creating register for signal `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.\registers[12]' using process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.$proc$../register.v:123$878'.
  created $dff cell `$procdff$1658' with positive edge clock.
Creating register for signal `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.\registers[11]' using process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.$proc$../register.v:123$873'.
  created $dff cell `$procdff$1659' with positive edge clock.
Creating register for signal `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.\registers[10]' using process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.$proc$../register.v:123$868'.
  created $dff cell `$procdff$1660' with positive edge clock.
Creating register for signal `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.\registers[9]' using process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.$proc$../register.v:123$863'.
  created $dff cell `$procdff$1661' with positive edge clock.
Creating register for signal `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.\registers[8]' using process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.$proc$../register.v:123$858'.
  created $dff cell `$procdff$1662' with positive edge clock.
Creating register for signal `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.\registers[7]' using process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.$proc$../register.v:123$853'.
  created $dff cell `$procdff$1663' with positive edge clock.
Creating register for signal `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.\registers[6]' using process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.$proc$../register.v:123$848'.
  created $dff cell `$procdff$1664' with positive edge clock.
Creating register for signal `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.\registers[5]' using process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.$proc$../register.v:123$843'.
  created $dff cell `$procdff$1665' with positive edge clock.
Creating register for signal `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.\registers[2]' using process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.$proc$../register.v:123$838'.
  created $dff cell `$procdff$1666' with positive edge clock.
Creating register for signal `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.\registers[1]' using process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.$proc$../register.v:123$833'.
  created $dff cell `$procdff$1667' with positive edge clock.
Creating register for signal `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.\last_data_rd_next' using process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.$proc$../register.v:43$830'.
  created $dff cell `$procdff$1668' with positive edge clock.
Creating register for signal `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.\read_through_rs1' using process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.$proc$../register.v:43$830'.
  created $dff cell `$procdff$1669' with positive edge clock.
Creating register for signal `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.\read_through_rs2' using process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.$proc$../register.v:43$830'.
  created $dff cell `$procdff$1670' with positive edge clock.
Creating register for signal `$paramod\nanoV_mul\A_BITS=s32'00000000000000000000000000010000.\accum' using process `$paramod\nanoV_mul\A_BITS=s32'00000000000000000000000000010000.$proc$../multiply.v:37$786'.
  created $dff cell `$procdff$1671' with positive edge clock.
Creating register for signal `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_core.\stored_data' using process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_core.$proc$../core.v:112$774'.
  created $dff cell `$procdff$1672' with positive edge clock.
Creating register for signal `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_core.\shift_amt_reg' using process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_core.$proc$../core.v:88$725'.
  created $dff cell `$procdff$1673' with positive edge clock.
Creating register for signal `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_core.\cy' using process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_core.$proc$../core.v:81$724'.
  created $dff cell `$procdff$1674' with positive edge clock.
Creating register for signal `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_core.\is_equal_reg' using process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_core.$proc$../core.v:81$724'.
  created $dff cell `$procdff$1675' with positive edge clock.
Creating register for signal `$paramod\nanoV_cpu\NUM_REGS=s32'00000000000000000000000000010000.\next_instr' using process `$paramod\nanoV_cpu\NUM_REGS=s32'00000000000000000000000000010000.$proc$../cpu.v:243$642'.
  created $dff cell `$procdff$1676' with positive edge clock.
Creating register for signal `$paramod\nanoV_cpu\NUM_REGS=s32'00000000000000000000000000010000.\last_data_xfer' using process `$paramod\nanoV_cpu\NUM_REGS=s32'00000000000000000000000000010000.$proc$../cpu.v:231$627'.
  created $dff cell `$procdff$1677' with positive edge clock.
Creating register for signal `$paramod\nanoV_cpu\NUM_REGS=s32'00000000000000000000000000010000.\spi_select' using process `$paramod\nanoV_cpu\NUM_REGS=s32'00000000000000000000000000010000.$proc$../cpu.v:136$598'.
  created $dff cell `$procdff$1678' with positive edge clock.
Creating register for signal `$paramod\nanoV_cpu\NUM_REGS=s32'00000000000000000000000000010000.\spi_clk_enable' using process `$paramod\nanoV_cpu\NUM_REGS=s32'00000000000000000000000000010000.$proc$../cpu.v:136$598'.
  created $dff cell `$procdff$1679' with positive edge clock.
Creating register for signal `$paramod\nanoV_cpu\NUM_REGS=s32'00000000000000000000000000010000.\use_ext_data_in_reg' using process `$paramod\nanoV_cpu\NUM_REGS=s32'00000000000000000000000000010000.$proc$../cpu.v:136$598'.
  created $dff cell `$procdff$1680' with positive edge clock.
Creating register for signal `$paramod\nanoV_cpu\NUM_REGS=s32'00000000000000000000000000010000.\start_instr_stream' using process `$paramod\nanoV_cpu\NUM_REGS=s32'00000000000000000000000000010000.$proc$../cpu.v:136$598'.
  created $dff cell `$procdff$1681' with positive edge clock.
Creating register for signal `$paramod\nanoV_cpu\NUM_REGS=s32'00000000000000000000000000010000.\starting_instr_stream' using process `$paramod\nanoV_cpu\NUM_REGS=s32'00000000000000000000000000010000.$proc$../cpu.v:136$598'.
  created $dff cell `$procdff$1682' with positive edge clock.
Creating register for signal `$paramod\nanoV_cpu\NUM_REGS=s32'00000000000000000000000000010000.\read_instr' using process `$paramod\nanoV_cpu\NUM_REGS=s32'00000000000000000000000000010000.$proc$../cpu.v:136$598'.
  created $dff cell `$procdff$1683' with positive edge clock.
Creating register for signal `$paramod\nanoV_cpu\NUM_REGS=s32'00000000000000000000000000010000.\first_instr' using process `$paramod\nanoV_cpu\NUM_REGS=s32'00000000000000000000000000010000.$proc$../cpu.v:136$598'.
  created $dff cell `$procdff$1684' with positive edge clock.
Creating register for signal `$paramod\nanoV_cpu\NUM_REGS=s32'00000000000000000000000000010000.\pc' using process `$paramod\nanoV_cpu\NUM_REGS=s32'00000000000000000000000000010000.$proc$../cpu.v:136$598'.
  created $dff cell `$procdff$1685' with positive edge clock.
Creating register for signal `$paramod\nanoV_cpu\NUM_REGS=s32'00000000000000000000000000010000.\start_data_stream' using process `$paramod\nanoV_cpu\NUM_REGS=s32'00000000000000000000000000010000.$proc$../cpu.v:136$598'.
  created $dff cell `$procdff$1686' with positive edge clock.
Creating register for signal `$paramod\nanoV_cpu\NUM_REGS=s32'00000000000000000000000000010000.\starting_data_stream' using process `$paramod\nanoV_cpu\NUM_REGS=s32'00000000000000000000000000010000.$proc$../cpu.v:136$598'.
  created $dff cell `$procdff$1687' with positive edge clock.
Creating register for signal `$paramod\nanoV_cpu\NUM_REGS=s32'00000000000000000000000000010000.\data_xfer' using process `$paramod\nanoV_cpu\NUM_REGS=s32'00000000000000000000000000010000.$proc$../cpu.v:136$598'.
  created $dff cell `$procdff$1688' with positive edge clock.
Creating register for signal `$paramod\nanoV_cpu\NUM_REGS=s32'00000000000000000000000000010000.\last_data_in' using process `$paramod\nanoV_cpu\NUM_REGS=s32'00000000000000000000000000010000.$proc$../cpu.v:94$569'.
  created $dff cell `$procdff$1689' with positive edge clock.
Creating register for signal `$paramod\nanoV_cpu\NUM_REGS=s32'00000000000000000000000000010000.\cycle' using process `$paramod\nanoV_cpu\NUM_REGS=s32'00000000000000000000000000010000.$proc$../cpu.v:55$513'.
  created $dff cell `$procdff$1690' with positive edge clock.
Creating register for signal `$paramod\nanoV_cpu\NUM_REGS=s32'00000000000000000000000000010000.\instr_cycles_reg' using process `$paramod\nanoV_cpu\NUM_REGS=s32'00000000000000000000000000010000.$proc$../cpu.v:55$513'.
  created $dff cell `$procdff$1691' with positive edge clock.
Creating register for signal `$paramod\nanoV_cpu\NUM_REGS=s32'00000000000000000000000000010000.\instr' using process `$paramod\nanoV_cpu\NUM_REGS=s32'00000000000000000000000000010000.$proc$../cpu.v:55$513'.
  created $dff cell `$procdff$1692' with positive edge clock.
Creating register for signal `$paramod\nanoV_cpu\NUM_REGS=s32'00000000000000000000000000010000.\cycles_for_instr$func$../cpu.v:64$480.$result' using process `$paramod\nanoV_cpu\NUM_REGS=s32'00000000000000000000000000010000.$proc$../cpu.v:55$513'.
  created $dff cell `$procdff$1693' with positive edge clock.
Creating register for signal `$paramod\nanoV_cpu\NUM_REGS=s32'00000000000000000000000000010000.\cycles_for_instr$func$../cpu.v:64$480.instr' using process `$paramod\nanoV_cpu\NUM_REGS=s32'00000000000000000000000000010000.$proc$../cpu.v:55$513'.
  created $dff cell `$procdff$1694' with positive edge clock.
Creating register for signal `$paramod\nanoV_cpu\NUM_REGS=s32'00000000000000000000000000010000.\counter' using process `$paramod\nanoV_cpu\NUM_REGS=s32'00000000000000000000000000010000.$proc$../cpu.v:25$482'.
  created $dff cell `$procdff$1695' with positive edge clock.
Creating register for signal `$paramod$ce6830bd8bd018e3cc0f9c5605fbb87f31d5ce1b\uart_tx.\txd_reg' using process `$paramod$ce6830bd8bd018e3cc0f9c5605fbb87f31d5ce1b\uart_tx.$proc$../uart/uart_tx.v:150$474'.
  created $dff cell `$procdff$1696' with positive edge clock.
Creating register for signal `$paramod$ce6830bd8bd018e3cc0f9c5605fbb87f31d5ce1b\uart_tx.\fsm_state' using process `$paramod$ce6830bd8bd018e3cc0f9c5605fbb87f31d5ce1b\uart_tx.$proc$../uart/uart_tx.v:139$461'.
  created $dff cell `$procdff$1697' with positive edge clock.
Creating register for signal `$paramod$ce6830bd8bd018e3cc0f9c5605fbb87f31d5ce1b\uart_tx.\next_fsm_state$func$../uart/uart_tx.v:143$446.$result' using process `$paramod$ce6830bd8bd018e3cc0f9c5605fbb87f31d5ce1b\uart_tx.$proc$../uart/uart_tx.v:139$461'.
  created $dff cell `$procdff$1698' with positive edge clock.
Creating register for signal `$paramod$ce6830bd8bd018e3cc0f9c5605fbb87f31d5ce1b\uart_tx.\next_fsm_state$func$../uart/uart_tx.v:143$446.tx_en' using process `$paramod$ce6830bd8bd018e3cc0f9c5605fbb87f31d5ce1b\uart_tx.$proc$../uart/uart_tx.v:139$461'.
  created $dff cell `$procdff$1699' with positive edge clock.
Creating register for signal `$paramod$ce6830bd8bd018e3cc0f9c5605fbb87f31d5ce1b\uart_tx.\cycle_counter' using process `$paramod$ce6830bd8bd018e3cc0f9c5605fbb87f31d5ce1b\uart_tx.$proc$../uart/uart_tx.v:126$457'.
  created $dff cell `$procdff$1700' with positive edge clock.
Creating register for signal `$paramod$ce6830bd8bd018e3cc0f9c5605fbb87f31d5ce1b\uart_tx.\data_to_send' using process `$paramod$ce6830bd8bd018e3cc0f9c5605fbb87f31d5ce1b\uart_tx.$proc$../uart/uart_tx.v:113$449'.
  created $dff cell `$procdff$1701' with positive edge clock.
Creating register for signal `$paramod$ce6830bd8bd018e3cc0f9c5605fbb87f31d5ce1b\uart_rx.\rxd_reg' using process `$paramod$ce6830bd8bd018e3cc0f9c5605fbb87f31d5ce1b\uart_rx.$proc$../uart/uart_rx.v:176$444'.
  created $dff cell `$procdff$1702' with positive edge clock.
Creating register for signal `$paramod$ce6830bd8bd018e3cc0f9c5605fbb87f31d5ce1b\uart_rx.\uart_rts' using process `$paramod$ce6830bd8bd018e3cc0f9c5605fbb87f31d5ce1b\uart_rx.$proc$../uart/uart_rx.v:166$441'.
  created $dff cell `$procdff$1703' with positive edge clock.
Creating register for signal `$paramod$ce6830bd8bd018e3cc0f9c5605fbb87f31d5ce1b\uart_rx.\fsm_state' using process `$paramod$ce6830bd8bd018e3cc0f9c5605fbb87f31d5ce1b\uart_rx.$proc$../uart/uart_rx.v:157$429'.
  created $dff cell `$procdff$1704' with positive edge clock.
Creating register for signal `$paramod$ce6830bd8bd018e3cc0f9c5605fbb87f31d5ce1b\uart_rx.\next_fsm_state$func$../uart/uart_rx.v:161$409.$result' using process `$paramod$ce6830bd8bd018e3cc0f9c5605fbb87f31d5ce1b\uart_rx.$proc$../uart/uart_rx.v:157$429'.
  created $dff cell `$procdff$1705' with positive edge clock.
Creating register for signal `$paramod$ce6830bd8bd018e3cc0f9c5605fbb87f31d5ce1b\uart_rx.\cycle_counter' using process `$paramod$ce6830bd8bd018e3cc0f9c5605fbb87f31d5ce1b\uart_rx.$proc$../uart/uart_rx.v:144$422'.
  created $dff cell `$procdff$1706' with positive edge clock.
Creating register for signal `$paramod$ce6830bd8bd018e3cc0f9c5605fbb87f31d5ce1b\uart_rx.\bit_sample' using process `$paramod$ce6830bd8bd018e3cc0f9c5605fbb87f31d5ce1b\uart_rx.$proc$../uart/uart_rx.v:133$420'.
  created $dff cell `$procdff$1707' with positive edge clock.
Creating register for signal `$paramod$ce6830bd8bd018e3cc0f9c5605fbb87f31d5ce1b\uart_rx.\recieved_data' using process `$paramod$ce6830bd8bd018e3cc0f9c5605fbb87f31d5ce1b\uart_rx.$proc$../uart/uart_rx.v:121$413'.
  created $dff cell `$procdff$1708' with positive edge clock.
Creating register for signal `\nanoV_top.\output_data' using process `\nanoV_top.$proc$pico_ice.v:73$386'.
  created $dff cell `$procdff$1709' with positive edge clock.
Creating register for signal `\nanoV_top.\connect_peripheral' using process `\nanoV_top.$proc$pico_ice.v:73$386'.
  created $dff cell `$procdff$1710' with positive edge clock.
Creating register for signal `\nanoV_top.\spi_mosi' using process `\nanoV_top.$proc$pico_ice.v:40$385'.
  created $dff cell `$procdff$1711' with positive edge clock.
Creating register for signal `\nanoV_top.\spi_select' using process `\nanoV_top.$proc$pico_ice.v:34$383'.
  created $dff cell `$procdff$1712' with positive edge clock.
Creating register for signal `\nanoV_top.\buffered_spi_in' using process `\nanoV_top.$proc$pico_ice.v:30$382'.
  created $dff cell `$procdff$1713' with negative edge clock.

10.4.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

10.4.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `SB_DFFNES.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$243'.
Found and cleaned up 1 empty switch in `\SB_DFFNES.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1414$240'.
Removing empty process `SB_DFFNES.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1414$240'.
Removing empty process `SB_DFFNESS.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$239'.
Found and cleaned up 2 empty switches in `\SB_DFFNESS.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1353$235'.
Removing empty process `SB_DFFNESS.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1353$235'.
Removing empty process `SB_DFFNER.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$234'.
Found and cleaned up 1 empty switch in `\SB_DFFNER.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1273$231'.
Removing empty process `SB_DFFNER.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1273$231'.
Removing empty process `SB_DFFNESR.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$230'.
Found and cleaned up 2 empty switches in `\SB_DFFNESR.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1212$226'.
Removing empty process `SB_DFFNESR.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1212$226'.
Removing empty process `SB_DFFNS.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$225'.
Removing empty process `SB_DFFNS.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1138$223'.
Removing empty process `SB_DFFNSS.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$222'.
Found and cleaned up 1 empty switch in `\SB_DFFNSS.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1088$220'.
Removing empty process `SB_DFFNSS.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1088$220'.
Removing empty process `SB_DFFNR.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$219'.
Removing empty process `SB_DFFNR.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1017$217'.
Removing empty process `SB_DFFNSR.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$216'.
Found and cleaned up 1 empty switch in `\SB_DFFNSR.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:967$214'.
Removing empty process `SB_DFFNSR.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:967$214'.
Removing empty process `SB_DFFNE.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$213'.
Found and cleaned up 1 empty switch in `\SB_DFFNE.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:922$212'.
Removing empty process `SB_DFFNE.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:922$212'.
Removing empty process `SB_DFFN.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$211'.
Removing empty process `SB_DFFN.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:882$210'.
Removing empty process `SB_DFFES.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$209'.
Found and cleaned up 1 empty switch in `\SB_DFFES.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:803$206'.
Removing empty process `SB_DFFES.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:803$206'.
Removing empty process `SB_DFFESS.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$205'.
Found and cleaned up 2 empty switches in `\SB_DFFESS.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:742$201'.
Removing empty process `SB_DFFESS.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:742$201'.
Removing empty process `SB_DFFER.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$200'.
Found and cleaned up 1 empty switch in `\SB_DFFER.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:662$197'.
Removing empty process `SB_DFFER.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:662$197'.
Removing empty process `SB_DFFESR.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$196'.
Found and cleaned up 2 empty switches in `\SB_DFFESR.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:601$192'.
Removing empty process `SB_DFFESR.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:601$192'.
Removing empty process `SB_DFFS.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$191'.
Removing empty process `SB_DFFS.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:527$189'.
Removing empty process `SB_DFFSS.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$188'.
Found and cleaned up 1 empty switch in `\SB_DFFSS.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:477$186'.
Removing empty process `SB_DFFSS.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:477$186'.
Removing empty process `SB_DFFR.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$185'.
Removing empty process `SB_DFFR.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:406$183'.
Removing empty process `SB_DFFSR.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$182'.
Found and cleaned up 1 empty switch in `\SB_DFFSR.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:356$180'.
Removing empty process `SB_DFFSR.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:356$180'.
Removing empty process `SB_DFFE.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$179'.
Found and cleaned up 1 empty switch in `\SB_DFFE.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:311$178'.
Removing empty process `SB_DFFE.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:311$178'.
Removing empty process `SB_DFF.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$177'.
Removing empty process `SB_DFF.$proc$/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:271$176'.
Removing empty process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.$proc$../register.v:0$904'.
Found and cleaned up 1 empty switch in `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.$proc$../register.v:0$901'.
Removing empty process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.$proc$../register.v:0$901'.
Found and cleaned up 1 empty switch in `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.$proc$../register.v:0$898'.
Removing empty process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.$proc$../register.v:0$898'.
Found and cleaned up 2 empty switches in `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.$proc$../register.v:123$893'.
Removing empty process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.$proc$../register.v:123$893'.
Found and cleaned up 2 empty switches in `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.$proc$../register.v:123$888'.
Removing empty process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.$proc$../register.v:123$888'.
Found and cleaned up 2 empty switches in `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.$proc$../register.v:123$883'.
Removing empty process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.$proc$../register.v:123$883'.
Found and cleaned up 2 empty switches in `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.$proc$../register.v:123$878'.
Removing empty process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.$proc$../register.v:123$878'.
Found and cleaned up 2 empty switches in `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.$proc$../register.v:123$873'.
Removing empty process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.$proc$../register.v:123$873'.
Found and cleaned up 2 empty switches in `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.$proc$../register.v:123$868'.
Removing empty process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.$proc$../register.v:123$868'.
Found and cleaned up 2 empty switches in `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.$proc$../register.v:123$863'.
Removing empty process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.$proc$../register.v:123$863'.
Found and cleaned up 2 empty switches in `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.$proc$../register.v:123$858'.
Removing empty process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.$proc$../register.v:123$858'.
Found and cleaned up 2 empty switches in `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.$proc$../register.v:123$853'.
Removing empty process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.$proc$../register.v:123$853'.
Found and cleaned up 2 empty switches in `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.$proc$../register.v:123$848'.
Removing empty process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.$proc$../register.v:123$848'.
Found and cleaned up 2 empty switches in `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.$proc$../register.v:123$843'.
Removing empty process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.$proc$../register.v:123$843'.
Found and cleaned up 2 empty switches in `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.$proc$../register.v:123$838'.
Removing empty process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.$proc$../register.v:123$838'.
Found and cleaned up 2 empty switches in `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.$proc$../register.v:123$833'.
Removing empty process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.$proc$../register.v:123$833'.
Removing empty process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.$proc$../register.v:43$830'.
Found and cleaned up 1 empty switch in `\nanoV_alu.$proc$../alu.v:0$807'.
Removing empty process `nanoV_alu.$proc$../alu.v:0$807'.
Removing empty process `$paramod\nanoV_mul\A_BITS=s32'00000000000000000000000000010000.$proc$../multiply.v:37$786'.
Found and cleaned up 2 empty switches in `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_core.$proc$../core.v:112$774'.
Removing empty process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_core.$proc$../core.v:112$774'.
Found and cleaned up 1 empty switch in `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_core.$proc$../core.v:88$725'.
Removing empty process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_core.$proc$../core.v:88$725'.
Found and cleaned up 1 empty switch in `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_core.$proc$../core.v:81$724'.
Removing empty process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_core.$proc$../core.v:81$724'.
Found and cleaned up 1 empty switch in `$paramod\nanoV_cpu\NUM_REGS=s32'00000000000000000000000000010000.$proc$../cpu.v:243$642'.
Removing empty process `$paramod\nanoV_cpu\NUM_REGS=s32'00000000000000000000000000010000.$proc$../cpu.v:243$642'.
Removing empty process `$paramod\nanoV_cpu\NUM_REGS=s32'00000000000000000000000000010000.$proc$../cpu.v:231$627'.
Found and cleaned up 23 empty switches in `$paramod\nanoV_cpu\NUM_REGS=s32'00000000000000000000000000010000.$proc$../cpu.v:136$598'.
Removing empty process `$paramod\nanoV_cpu\NUM_REGS=s32'00000000000000000000000000010000.$proc$../cpu.v:136$598'.
Removing empty process `$paramod\nanoV_cpu\NUM_REGS=s32'00000000000000000000000000010000.$proc$../cpu.v:94$569'.
Found and cleaned up 6 empty switches in `$paramod\nanoV_cpu\NUM_REGS=s32'00000000000000000000000000010000.$proc$../cpu.v:55$513'.
Removing empty process `$paramod\nanoV_cpu\NUM_REGS=s32'00000000000000000000000000010000.$proc$../cpu.v:55$513'.
Found and cleaned up 1 empty switch in `$paramod\nanoV_cpu\NUM_REGS=s32'00000000000000000000000000010000.$proc$../cpu.v:25$482'.
Removing empty process `$paramod\nanoV_cpu\NUM_REGS=s32'00000000000000000000000000010000.$proc$../cpu.v:25$482'.
Found and cleaned up 3 empty switches in `$paramod$ce6830bd8bd018e3cc0f9c5605fbb87f31d5ce1b\uart_tx.$proc$../uart/uart_tx.v:150$474'.
Removing empty process `$paramod$ce6830bd8bd018e3cc0f9c5605fbb87f31d5ce1b\uart_tx.$proc$../uart/uart_tx.v:150$474'.
Found and cleaned up 5 empty switches in `$paramod$ce6830bd8bd018e3cc0f9c5605fbb87f31d5ce1b\uart_tx.$proc$../uart/uart_tx.v:139$461'.
Removing empty process `$paramod$ce6830bd8bd018e3cc0f9c5605fbb87f31d5ce1b\uart_tx.$proc$../uart/uart_tx.v:139$461'.
Found and cleaned up 3 empty switches in `$paramod$ce6830bd8bd018e3cc0f9c5605fbb87f31d5ce1b\uart_tx.$proc$../uart/uart_tx.v:126$457'.
Removing empty process `$paramod$ce6830bd8bd018e3cc0f9c5605fbb87f31d5ce1b\uart_tx.$proc$../uart/uart_tx.v:126$457'.
Found and cleaned up 3 empty switches in `$paramod$ce6830bd8bd018e3cc0f9c5605fbb87f31d5ce1b\uart_tx.$proc$../uart/uart_tx.v:113$449'.
Removing empty process `$paramod$ce6830bd8bd018e3cc0f9c5605fbb87f31d5ce1b\uart_tx.$proc$../uart/uart_tx.v:113$449'.
Found and cleaned up 1 empty switch in `$paramod$ce6830bd8bd018e3cc0f9c5605fbb87f31d5ce1b\uart_rx.$proc$../uart/uart_rx.v:176$444'.
Removing empty process `$paramod$ce6830bd8bd018e3cc0f9c5605fbb87f31d5ce1b\uart_rx.$proc$../uart/uart_rx.v:176$444'.
Found and cleaned up 1 empty switch in `$paramod$ce6830bd8bd018e3cc0f9c5605fbb87f31d5ce1b\uart_rx.$proc$../uart/uart_rx.v:166$441'.
Removing empty process `$paramod$ce6830bd8bd018e3cc0f9c5605fbb87f31d5ce1b\uart_rx.$proc$../uart/uart_rx.v:166$441'.
Found and cleaned up 2 empty switches in `$paramod$ce6830bd8bd018e3cc0f9c5605fbb87f31d5ce1b\uart_rx.$proc$../uart/uart_rx.v:157$429'.
Removing empty process `$paramod$ce6830bd8bd018e3cc0f9c5605fbb87f31d5ce1b\uart_rx.$proc$../uart/uart_rx.v:157$429'.
Found and cleaned up 2 empty switches in `$paramod$ce6830bd8bd018e3cc0f9c5605fbb87f31d5ce1b\uart_rx.$proc$../uart/uart_rx.v:144$422'.
Removing empty process `$paramod$ce6830bd8bd018e3cc0f9c5605fbb87f31d5ce1b\uart_rx.$proc$../uart/uart_rx.v:144$422'.
Found and cleaned up 2 empty switches in `$paramod$ce6830bd8bd018e3cc0f9c5605fbb87f31d5ce1b\uart_rx.$proc$../uart/uart_rx.v:133$420'.
Removing empty process `$paramod$ce6830bd8bd018e3cc0f9c5605fbb87f31d5ce1b\uart_rx.$proc$../uart/uart_rx.v:133$420'.
Found and cleaned up 3 empty switches in `$paramod$ce6830bd8bd018e3cc0f9c5605fbb87f31d5ce1b\uart_rx.$proc$../uart/uart_rx.v:121$413'.
Removing empty process `$paramod$ce6830bd8bd018e3cc0f9c5605fbb87f31d5ce1b\uart_rx.$proc$../uart/uart_rx.v:121$413'.
Found and cleaned up 7 empty switches in `\nanoV_top.$proc$pico_ice.v:73$386'.
Removing empty process `nanoV_top.$proc$pico_ice.v:73$386'.
Removing empty process `nanoV_top.$proc$pico_ice.v:40$385'.
Found and cleaned up 1 empty switch in `\nanoV_top.$proc$pico_ice.v:34$383'.
Removing empty process `nanoV_top.$proc$pico_ice.v:34$383'.
Removing empty process `nanoV_top.$proc$pico_ice.v:30$382'.
Cleaned up 115 empty switches.

10.4.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.
<suppressed ~3 debug messages>
Optimizing module nanoV_alu.
<suppressed ~1 debug messages>
Optimizing module nanoV_shift.
<suppressed ~1 debug messages>
Optimizing module $paramod\nanoV_mul\A_BITS=s32'00000000000000000000000000010000.
Optimizing module $paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_core.
<suppressed ~13 debug messages>
Optimizing module $paramod\nanoV_cpu\NUM_REGS=s32'00000000000000000000000000010000.
<suppressed ~46 debug messages>
Optimizing module $paramod$ce6830bd8bd018e3cc0f9c5605fbb87f31d5ce1b\uart_tx.
<suppressed ~14 debug messages>
Optimizing module $paramod$ce6830bd8bd018e3cc0f9c5605fbb87f31d5ce1b\uart_rx.
<suppressed ~11 debug messages>
Optimizing module nanoV_top.
<suppressed ~2 debug messages>

10.5. Executing FLATTEN pass (flatten design).
Deleting now unused module $paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_registers.
Deleting now unused module nanoV_alu.
Deleting now unused module nanoV_shift.
Deleting now unused module $paramod\nanoV_mul\A_BITS=s32'00000000000000000000000000010000.
Deleting now unused module $paramod$c6073fd8a5b287029e036048d234daa072bb204f\nanoV_core.
Deleting now unused module $paramod\nanoV_cpu\NUM_REGS=s32'00000000000000000000000000010000.
Deleting now unused module $paramod$ce6830bd8bd018e3cc0f9c5605fbb87f31d5ce1b\uart_tx.
Deleting now unused module $paramod$ce6830bd8bd018e3cc0f9c5605fbb87f31d5ce1b\uart_rx.
<suppressed ~8 debug messages>

10.6. Executing TRIBUF pass.

10.7. Executing DEMINOUT pass (demote inout ports to input or output).

10.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module nanoV_top.

10.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \nanoV_top..
Removed 32 unused cells and 477 unused wires.
<suppressed ~48 debug messages>

10.10. Executing CHECK pass (checking for obvious problems).
Checking module nanoV_top...
Found and reported 0 problems.

10.11. Executing OPT pass (performing simple optimizations).

10.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module nanoV_top.

10.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\nanoV_top'.
<suppressed ~210 debug messages>
Removed a total of 70 cells.

10.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \nanoV_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port A of cell $flatten\nano.$procmux$1118: \nano.data_xfer -> 1'0
      Replacing known input bits on port A of cell $flatten\nano.$procmux$1139: \nano.starting_data_stream -> 1'0
      Replacing known input bits on port A of cell $flatten\nano.$procmux$1157: \nano.start_data_stream -> 1'0
      Replacing known input bits on port A of cell $flatten\nano.$procmux$1237: \nano.starting_instr_stream -> 1'0
      Replacing known input bits on port A of cell $flatten\nano.$procmux$1263: \nano.start_instr_stream -> 1'0
  Analyzing evaluation results.
    dead port 2/2 on $mux $flatten\i_uart_tx.$procmux$1501.
    dead port 1/2 on $mux $flatten\i_uart_tx.$procmux$1504.
    dead port 2/2 on $mux $flatten\i_uart_tx.$procmux$1507.
    dead port 1/2 on $mux $flatten\i_uart_tx.$procmux$1513.
    dead port 2/2 on $mux $flatten\i_uart_tx.$procmux$1516.
    dead port 2/2 on $mux $flatten\i_uart_tx.$procmux$1522.
    dead port 2/2 on $mux $flatten\i_uart_tx.$procmux$1525.
    dead port 2/2 on $mux $flatten\i_uart_tx.$procmux$1531.
    dead port 1/2 on $mux $flatten\nano.$procmux$1400.
    dead port 1/2 on $mux $flatten\nano.$procmux$1403.
    dead port 1/2 on $mux $flatten\nano.$procmux$1406.
    dead port 2/2 on $mux $flatten\nano.$procmux$1408.
    dead port 2/2 on $mux $flatten\nano.$procmux$1411.
    dead port 1/2 on $mux $flatten\nano.$procmux$1418.
    dead port 1/2 on $mux $flatten\nano.$procmux$1421.
    dead port 2/2 on $mux $flatten\nano.$procmux$1423.
    dead port 2/2 on $mux $flatten\nano.$procmux$1426.
    dead port 1/2 on $mux $flatten\nano.$procmux$1433.
    dead port 2/2 on $mux $flatten\nano.$procmux$1435.
    dead port 2/2 on $mux $flatten\nano.$procmux$1438.
    dead port 2/2 on $mux $flatten\nano.$procmux$1444.
    dead port 2/2 on $mux $flatten\nano.$procmux$1447.
    dead port 2/2 on $mux $flatten\i_uart_rx.$procmux$1570.
Removed 23 multiplexer ports.
<suppressed ~89 debug messages>

10.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \nanoV_top.
  Optimizing cells in module \nanoV_top.
Performed a total of 5 changes.

10.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\nanoV_top'.
Removed a total of 0 cells.

10.11.6. Executing OPT_DFF pass (perform DFF optimizations).

10.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \nanoV_top..
Removed 0 unused cells and 96 unused wires.
<suppressed ~1 debug messages>

10.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module nanoV_top.

10.11.9. Rerunning OPT passes. (Maybe there is more to do..)

10.11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \nanoV_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~89 debug messages>

10.11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \nanoV_top.
Performed a total of 0 changes.

10.11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\nanoV_top'.
Removed a total of 0 cells.

10.11.13. Executing OPT_DFF pass (perform DFF optimizations).

10.11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \nanoV_top..

10.11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module nanoV_top.

10.11.16. Finished OPT passes. (There is nothing left to do.)

10.12. Executing FSM pass (extract and optimize FSM).

10.12.1. Executing FSM_DETECT pass (finding FSMs in design).
Found FSM state register nanoV_top.connect_peripheral.
Not marking nanoV_top.nano.instr_cycles_reg as FSM state register:
    Users of register don't seem to benefit from recoding.

10.12.2. Executing FSM_EXTRACT pass (extracting FSM from design).
Extracting FSM `\connect_peripheral' from module `\nanoV_top'.
  found $dff cell for state register: $procdff$1710
  root of input selection tree: $0\connect_peripheral[2:0]
  found reset state: 3'000 (guessed from mux tree)
  found ctrl input: \rst_n
  found state code: 3'000
  found ctrl input: \is_addr
  found ctrl input: $eq$pico_ice.v:78$388_Y
  found ctrl input: $eq$pico_ice.v:79$389_Y
  found ctrl input: $eq$pico_ice.v:80$390_Y
  found ctrl input: $eq$pico_ice.v:81$391_Y
  found state code: 3'101
  found state code: 3'100
  found state code: 3'011
  found state code: 3'010
  found ctrl output: $eq$pico_ice.v:85$392_Y
  found ctrl output: $eq$pico_ice.v:93$395_Y
  found ctrl output: $eq$pico_ice.v:95$397_Y
  found ctrl output: $eq$pico_ice.v:114$407_Y
  ctrl inputs: { $eq$pico_ice.v:81$391_Y $eq$pico_ice.v:80$390_Y $eq$pico_ice.v:79$389_Y $eq$pico_ice.v:78$388_Y \is_addr \rst_n }
  ctrl outputs: { $eq$pico_ice.v:114$407_Y $eq$pico_ice.v:95$397_Y $eq$pico_ice.v:93$395_Y $eq$pico_ice.v:85$392_Y $0\connect_peripheral[2:0] }
  transition:      3'000 6'-----0 ->      3'000 7'0000000
  transition:      3'000 6'----01 ->      3'000 7'0000000
  transition:      3'000 6'000011 ->      3'000 7'0000000
  transition:      3'000 6'100011 ->      3'101 7'0000101
  transition:      3'000 6'-10011 ->      3'100 7'0000100
  transition:      3'000 6'--1011 ->      3'011 7'0000011
  transition:      3'000 6'---111 ->      3'010 7'0000010
  transition:      3'100 6'-----0 ->      3'000 7'1000000
  transition:      3'100 6'----01 ->      3'100 7'1000100
  transition:      3'100 6'000011 ->      3'000 7'1000000
  transition:      3'100 6'100011 ->      3'101 7'1000101
  transition:      3'100 6'-10011 ->      3'100 7'1000100
  transition:      3'100 6'--1011 ->      3'011 7'1000011
  transition:      3'100 6'---111 ->      3'010 7'1000010
  transition:      3'010 6'-----0 ->      3'000 7'0001000
  transition:      3'010 6'----01 ->      3'010 7'0001010
  transition:      3'010 6'000011 ->      3'000 7'0001000
  transition:      3'010 6'100011 ->      3'101 7'0001101
  transition:      3'010 6'-10011 ->      3'100 7'0001100
  transition:      3'010 6'--1011 ->      3'011 7'0001011
  transition:      3'010 6'---111 ->      3'010 7'0001010
  transition:      3'101 6'-----0 ->      3'000 7'0100000
  transition:      3'101 6'----01 ->      3'101 7'0100101
  transition:      3'101 6'000011 ->      3'000 7'0100000
  transition:      3'101 6'100011 ->      3'101 7'0100101
  transition:      3'101 6'-10011 ->      3'100 7'0100100
  transition:      3'101 6'--1011 ->      3'011 7'0100011
  transition:      3'101 6'---111 ->      3'010 7'0100010
  transition:      3'011 6'-----0 ->      3'000 7'0010000
  transition:      3'011 6'----01 ->      3'011 7'0010011
  transition:      3'011 6'000011 ->      3'000 7'0010000
  transition:      3'011 6'100011 ->      3'101 7'0010101
  transition:      3'011 6'-10011 ->      3'100 7'0010100
  transition:      3'011 6'--1011 ->      3'011 7'0010011
  transition:      3'011 6'---111 ->      3'010 7'0010010

10.12.3. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\connect_peripheral$1722' from module `\nanoV_top'.

10.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \nanoV_top..
Removed 11 unused cells and 11 unused wires.
<suppressed ~12 debug messages>

10.12.5. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\connect_peripheral$1722' from module `\nanoV_top'.
  Removing unused output signal $0\connect_peripheral[2:0] [0].
  Removing unused output signal $0\connect_peripheral[2:0] [1].
  Removing unused output signal $0\connect_peripheral[2:0] [2].

10.12.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).
Recoding FSM `$fsm$\connect_peripheral$1722' from module `\nanoV_top' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  000 -> ----1
  100 -> ---1-
  010 -> --1--
  101 -> -1---
  011 -> 1----

10.12.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

FSM `$fsm$\connect_peripheral$1722' from module `nanoV_top':
-------------------------------------

  Information on FSM $fsm$\connect_peripheral$1722 (\connect_peripheral):

  Number of input signals:    6
  Number of output signals:   4
  Number of state bits:       5

  Input signals:
    0: \rst_n
    1: \is_addr
    2: $eq$pico_ice.v:78$388_Y
    3: $eq$pico_ice.v:79$389_Y
    4: $eq$pico_ice.v:80$390_Y
    5: $eq$pico_ice.v:81$391_Y

  Output signals:
    0: $eq$pico_ice.v:85$392_Y
    1: $eq$pico_ice.v:93$395_Y
    2: $eq$pico_ice.v:95$397_Y
    3: $eq$pico_ice.v:114$407_Y

  State encoding:
    0:    5'----1  <RESET STATE>
    1:    5'---1-
    2:    5'--1--
    3:    5'-1---
    4:    5'1----

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 6'-----0   ->     0 4'0000
      1:     0 6'----01   ->     0 4'0000
      2:     0 6'000011   ->     0 4'0000
      3:     0 6'-10011   ->     1 4'0000
      4:     0 6'---111   ->     2 4'0000
      5:     0 6'100011   ->     3 4'0000
      6:     0 6'--1011   ->     4 4'0000
      7:     1 6'-----0   ->     0 4'1000
      8:     1 6'000011   ->     0 4'1000
      9:     1 6'----01   ->     1 4'1000
     10:     1 6'-10011   ->     1 4'1000
     11:     1 6'---111   ->     2 4'1000
     12:     1 6'100011   ->     3 4'1000
     13:     1 6'--1011   ->     4 4'1000
     14:     2 6'-----0   ->     0 4'0001
     15:     2 6'000011   ->     0 4'0001
     16:     2 6'-10011   ->     1 4'0001
     17:     2 6'----01   ->     2 4'0001
     18:     2 6'---111   ->     2 4'0001
     19:     2 6'100011   ->     3 4'0001
     20:     2 6'--1011   ->     4 4'0001
     21:     3 6'-----0   ->     0 4'0100
     22:     3 6'000011   ->     0 4'0100
     23:     3 6'-10011   ->     1 4'0100
     24:     3 6'---111   ->     2 4'0100
     25:     3 6'----01   ->     3 4'0100
     26:     3 6'100011   ->     3 4'0100
     27:     3 6'--1011   ->     4 4'0100
     28:     4 6'-----0   ->     0 4'0010
     29:     4 6'000011   ->     0 4'0010
     30:     4 6'-10011   ->     1 4'0010
     31:     4 6'---111   ->     2 4'0010
     32:     4 6'100011   ->     3 4'0010
     33:     4 6'----01   ->     4 4'0010
     34:     4 6'--1011   ->     4 4'0010

-------------------------------------

10.12.8. Executing FSM_MAP pass (mapping FSMs to basic logic).
Mapping FSM `$fsm$\connect_peripheral$1722' from module `\nanoV_top'.

10.13. Executing OPT pass (performing simple optimizations).

10.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module nanoV_top.
<suppressed ~1 debug messages>

10.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\nanoV_top'.
<suppressed ~12 debug messages>
Removed a total of 4 cells.

10.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \nanoV_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~88 debug messages>

10.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \nanoV_top.
Performed a total of 0 changes.

10.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\nanoV_top'.
Removed a total of 0 cells.

10.13.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $procdff$1712 ($dff) from module nanoV_top (D = \nano.spi_select, Q = \spi_select, rval = 1'1).
Adding EN signal on $procdff$1709 ($dff) from module nanoV_top (D = { \nano.core.stored_data [23] \nano.core.stored_data [24] \nano.core.stored_data [25] \nano.core.stored_data [26] \nano.core.stored_data [27] \nano.core.stored_data [28] \nano.core.stored_data [29] \nano.core.stored_data [30] }, Q = \output_data).
Adding SRST signal on $flatten\nano.\core.\multiplier.$procdff$1671 ($dff) from module nanoV_top (D = \nano.core.multiplier.next_accum [16], Q = \nano.core.multiplier.accum [15], rval = 1'0).
Adding SRST signal on $flatten\nano.\core.$procdff$1675 ($dff) from module nanoV_top (D = \nano.core.is_equal, Q = \nano.core.is_equal_reg, rval = 1'1).
Adding EN signal on $flatten\nano.\core.$procdff$1673 ($dff) from module nanoV_top (D = { $flatten\nano.\core.$ternary$../core.v:90$730_Y \nano.core.shift_amt_reg [4:1] }, Q = \nano.core.shift_amt_reg).
Adding EN signal on $flatten\nano.\core.$procdff$1672 ($dff) from module nanoV_top (D = $flatten\nano.\core.$0\stored_data[31:0], Q = \nano.core.stored_data).
Adding SRST signal on $flatten\nano.$procdff$1695 ($dff) from module nanoV_top (D = \nano.next_counter [4:0], Q = \nano.counter, rval = 5'00000).
Adding SRST signal on $flatten\nano.$procdff$1692 ($dff) from module nanoV_top (D = $flatten\nano.$procmux$1474_Y, Q = \nano.instr, rval = 30'000000000000000000000000011011).
Adding EN signal on $auto$ff.cc:266:slice$1779 ($sdff) from module nanoV_top (D = \nano.next_instr [31:2], Q = \nano.instr).
Adding SRST signal on $flatten\nano.$procdff$1691 ($dff) from module nanoV_top (D = $flatten\nano.$procmux$1480_Y, Q = \nano.instr_cycles_reg, rval = 3'011).
Adding EN signal on $auto$ff.cc:266:slice$1781 ($sdff) from module nanoV_top (D = $flatten\nano.$3\cycles_for_instr$func$../cpu.v:64$480.$result[2:0]$523, Q = \nano.instr_cycles_reg).
Adding SRST signal on $flatten\nano.$procdff$1690 ($dff) from module nanoV_top (D = \nano.next_cycle, Q = \nano.cycle, rval = 3'000).
Adding SRST signal on $flatten\nano.$procdff$1689 ($dff) from module nanoV_top (D = \nano.core.data_in, Q = \nano.last_data_in, rval = 1'0).
Adding SRST signal on $flatten\nano.$procdff$1688 ($dff) from module nanoV_top (D = $flatten\nano.$procmux$1129_Y, Q = \nano.data_xfer, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$1789 ($sdff) from module nanoV_top (D = $flatten\nano.$procmux$1126_Y, Q = \nano.data_xfer).
Adding SRST signal on $flatten\nano.$procdff$1687 ($dff) from module nanoV_top (D = $flatten\nano.$procmux$1147_Y, Q = \nano.starting_data_stream, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$1807 ($sdff) from module nanoV_top (D = $flatten\nano.$procmux$1142_Y, Q = \nano.starting_data_stream).
Adding SRST signal on $flatten\nano.$procdff$1686 ($dff) from module nanoV_top (D = $flatten\nano.$procmux$1164_Y, Q = \nano.start_data_stream, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$1817 ($sdff) from module nanoV_top (D = $flatten\nano.$procmux$1164_Y, Q = \nano.start_data_stream).
Adding SRST signal on $flatten\nano.$procdff$1685 ($dff) from module nanoV_top (D = $flatten\nano.$procmux$1101_Y, Q = \nano.pc, rval = 22'0000000000000000000000).
Adding EN signal on $auto$ff.cc:266:slice$1829 ($sdff) from module nanoV_top (D = $flatten\nano.$procmux$1101_Y, Q = \nano.pc).
Adding SRST signal on $flatten\nano.$procdff$1684 ($dff) from module nanoV_top (D = $flatten\nano.$procmux$1198_Y, Q = \nano.first_instr, rval = 2'00).
Adding EN signal on $auto$ff.cc:266:slice$1833 ($sdff) from module nanoV_top (D = $flatten\nano.$procmux$1195_Y, Q = \nano.first_instr).
Adding SRST signal on $flatten\nano.$procdff$1683 ($dff) from module nanoV_top (D = $flatten\nano.$procmux$1228_Y, Q = \nano.read_instr, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$1853 ($sdff) from module nanoV_top (D = $flatten\nano.$procmux$1228_Y, Q = \nano.read_instr).
Adding SRST signal on $flatten\nano.$procdff$1682 ($dff) from module nanoV_top (D = $flatten\nano.$procmux$1254_Y, Q = \nano.starting_instr_stream, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$1875 ($sdff) from module nanoV_top (D = $flatten\nano.$procmux$1240_Y, Q = \nano.starting_instr_stream).
Adding SRST signal on $flatten\nano.$procdff$1681 ($dff) from module nanoV_top (D = $flatten\nano.$procmux$1290_Y, Q = \nano.start_instr_stream, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$1891 ($sdff) from module nanoV_top (D = $flatten\nano.$procmux$1287_Y, Q = \nano.start_instr_stream).
Adding SRST signal on $flatten\nano.$procdff$1680 ($dff) from module nanoV_top (D = $flatten\nano.$procmux$1318_Y, Q = \nano.use_ext_data_in_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$1913 ($sdff) from module nanoV_top (D = $flatten\nano.$procmux$1304_Y, Q = \nano.use_ext_data_in_reg).
Adding SRST signal on $flatten\nano.$procdff$1679 ($dff) from module nanoV_top (D = $flatten\nano.$procmux$1349_Y, Q = \nano.spi_clk_enable, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$1929 ($sdff) from module nanoV_top (D = $flatten\nano.$procmux$1326_Y, Q = \nano.spi_clk_enable).
Adding SRST signal on $flatten\nano.$procdff$1678 ($dff) from module nanoV_top (D = $flatten\nano.$procmux$1387_Y, Q = \nano.spi_select, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$1949 ($sdff) from module nanoV_top (D = $flatten\nano.$procmux$1387_Y, Q = \nano.spi_select).
Adding SRST signal on $flatten\nano.$procdff$1676 ($dff) from module nanoV_top (D = { \nano.next_instr_new_bit \nano.next_instr [31:1] }, Q = \nano.next_instr, rval = 19).
Adding SRST signal on $flatten\i_uart_tx.$procdff$1701 ($dff) from module nanoV_top (D = $flatten\i_uart_tx.$procmux$1553_Y, Q = \i_uart_tx.data_to_send, rval = 8'00000000).
Adding EN signal on $auto$ff.cc:266:slice$1972 ($sdff) from module nanoV_top (D = $flatten\i_uart_tx.$procmux$1553_Y, Q = \i_uart_tx.data_to_send).
Adding SRST signal on $flatten\i_uart_tx.$procdff$1700 ($dff) from module nanoV_top (D = $flatten\i_uart_tx.$procmux$1542_Y, Q = \i_uart_tx.cycle_counter, rval = 8'00000000).
Adding EN signal on $auto$ff.cc:266:slice$1976 ($sdff) from module nanoV_top (D = $flatten\i_uart_tx.$add$../uart/uart_tx.v:132$460_Y, Q = \i_uart_tx.cycle_counter).
Adding SRST signal on $flatten\i_uart_tx.$procdff$1697 ($dff) from module nanoV_top (D = $flatten\i_uart_tx.$2\next_fsm_state$func$../uart/uart_tx.v:143$446.$result[3:0]$468, Q = \i_uart_tx.fsm_state, rval = 4'0000).
Adding EN signal on $auto$ff.cc:266:slice$1982 ($sdff) from module nanoV_top (D = $flatten\i_uart_tx.$2\next_fsm_state$func$../uart/uart_tx.v:143$446.$result[3:0]$468, Q = \i_uart_tx.fsm_state).
Adding SRST signal on $flatten\i_uart_tx.$procdff$1696 ($dff) from module nanoV_top (D = $flatten\i_uart_tx.$procmux$1492_Y, Q = \i_uart_tx.txd_reg, rval = 1'1).
Adding SRST signal on $flatten\i_uart_rx.$procdff$1708 ($dff) from module nanoV_top (D = $flatten\i_uart_rx.$procmux$1589_Y, Q = \i_uart_rx.recieved_data, rval = 8'00000000).
Adding EN signal on $auto$ff.cc:266:slice$1987 ($sdff) from module nanoV_top (D = { \i_uart_rx.bit_sample \i_uart_rx.recieved_data [7:1] }, Q = \i_uart_rx.recieved_data).
Adding SRST signal on $flatten\i_uart_rx.$procdff$1707 ($dff) from module nanoV_top (D = $flatten\i_uart_rx.$procmux$1584_Y, Q = \i_uart_rx.bit_sample, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$1993 ($sdff) from module nanoV_top (D = \i_uart_rx.rxd_reg [0], Q = \i_uart_rx.bit_sample).
Adding SRST signal on $flatten\i_uart_rx.$procdff$1706 ($dff) from module nanoV_top (D = $flatten\i_uart_rx.$add$../uart/uart_rx.v:150$428_Y, Q = \i_uart_rx.cycle_counter, rval = 8'00000000).
Adding SRST signal on $flatten\i_uart_rx.$procdff$1704 ($dff) from module nanoV_top (D = $flatten\i_uart_rx.$2\next_fsm_state$func$../uart/uart_rx.v:161$409.$result[3:0]$433, Q = \i_uart_rx.fsm_state, rval = 4'0000).
Adding EN signal on $auto$ff.cc:266:slice$2000 ($sdff) from module nanoV_top (D = $flatten\i_uart_rx.$2\next_fsm_state$func$../uart/uart_rx.v:161$409.$result[3:0]$433, Q = \i_uart_rx.fsm_state).
Adding SRST signal on $flatten\i_uart_rx.$procdff$1703 ($dff) from module nanoV_top (D = $flatten\i_uart_rx.$gt$../uart/uart_rx.v:170$443_Y, Q = \i_uart_rx.uart_rts, rval = 1'1).
Adding SRST signal on $flatten\i_uart_rx.$procdff$1702 ($dff) from module nanoV_top (D = { \uart_rxd \i_uart_rx.rxd_reg [1] }, Q = \i_uart_rx.rxd_reg, rval = 2'11).

10.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \nanoV_top..
Removed 71 unused cells and 81 unused wires.
<suppressed ~72 debug messages>

10.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module nanoV_top.
<suppressed ~12 debug messages>

10.13.9. Rerunning OPT passes. (Maybe there is more to do..)

10.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \nanoV_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~74 debug messages>

10.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \nanoV_top.
Performed a total of 0 changes.

10.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\nanoV_top'.
<suppressed ~138 debug messages>
Removed a total of 46 cells.

10.13.13. Executing OPT_DFF pass (perform DFF optimizations).

10.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \nanoV_top..
Removed 0 unused cells and 46 unused wires.
<suppressed ~1 debug messages>

10.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module nanoV_top.

10.13.16. Rerunning OPT passes. (Maybe there is more to do..)

10.13.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \nanoV_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~77 debug messages>

10.13.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \nanoV_top.
Performed a total of 0 changes.

10.13.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\nanoV_top'.
Removed a total of 0 cells.

10.13.20. Executing OPT_DFF pass (perform DFF optimizations).

10.13.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \nanoV_top..

10.13.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module nanoV_top.

10.13.23. Finished OPT passes. (There is nothing left to do.)

10.14. Executing WREDUCE pass (reducing word size of cells).
Removed top 3 bits (of 32) from port B of cell nanoV_top.$eq$pico_ice.v:78$388 ($eq).
Removed top 3 bits (of 32) from port B of cell nanoV_top.$eq$pico_ice.v:79$389 ($eq).
Removed top 3 bits (of 32) from port B of cell nanoV_top.$eq$pico_ice.v:80$390 ($eq).
Removed top 3 bits (of 32) from port B of cell nanoV_top.$eq$pico_ice.v:81$391 ($eq).
Removed top 30 bits (of 32) from mux cell nanoV_top.$ternary$pico_ice.v:95$398 ($mux).
Removed top 24 bits (of 32) from mux cell nanoV_top.$ternary$pico_ice.v:94$400 ($mux).
Removed top 24 bits (of 32) from mux cell nanoV_top.$ternary$pico_ice.v:93$402 ($mux).
Removed top 24 bits (of 32) from mux cell nanoV_top.$ternary$pico_ice.v:92$404 ($mux).
Removed top 4 bits (of 6) from port B of cell nanoV_top.$auto$fsm_map.cc:77:implement_pattern_cache$1739 ($eq).
Removed top 5 bits (of 8) from port B of cell nanoV_top.$auto$opt_dff.cc:195:make_patterns_logic$1836 ($ne).
Removed top 2 bits (of 3) from port B of cell nanoV_top.$auto$opt_dff.cc:195:make_patterns_logic$1844 ($ne).
Removed top 2 bits (of 4) from port B of cell nanoV_top.$auto$opt_dff.cc:195:make_patterns_logic$1842 ($ne).
Removed top 1 bits (of 2) from port B of cell nanoV_top.$auto$opt_dff.cc:195:make_patterns_logic$1846 ($ne).
Removed top 1 bits (of 2) from port B of cell nanoV_top.$auto$opt_dff.cc:195:make_patterns_logic$1826 ($ne).
Removed top 1 bits (of 4) from port B of cell nanoV_top.$auto$opt_dff.cc:195:make_patterns_logic$1796 ($ne).
Removed top 2 bits (of 3) from port B of cell nanoV_top.$auto$opt_dff.cc:195:make_patterns_logic$1800 ($ne).
Removed top 30 bits (of 32) from mux cell nanoV_top.$flatten\nano.\core.$ternary$../core.v:52$670 ($mux).
Removed top 30 bits (of 32) from port B of cell nanoV_top.$flatten\nano.\core.$eq$../core.v:52$671 ($eq).
Removed top 3 bits (of 5) from port B of cell nanoV_top.$flatten\nano.\core.$eq$../core.v:65$696 ($eq).
Removed top 1 bits (of 2) from port B of cell nanoV_top.$flatten\nano.\core.$eq$../core.v:75$719 ($eq).
Removed top 29 bits (of 32) from port B of cell nanoV_top.$flatten\nano.\core.$lt$../core.v:89$726 ($lt).
Removed top 1 bits (of 17) from port A of cell nanoV_top.$flatten\nano.\core.\multiplier.$add$../multiply.v:35$785 ($add).
Removed top 1 bits (of 17) from port B of cell nanoV_top.$flatten\nano.\core.\multiplier.$add$../multiply.v:35$785 ($add).
Removed top 1 bits (of 2) from port B of cell nanoV_top.$flatten\nano.\core.$eq$../core.v:104$739 ($eq).
Removed top 27 bits (of 32) from port B of cell nanoV_top.$flatten\nano.\core.$lt$../core.v:126$781 ($lt).
Removed top 30 bits (of 32) from port B of cell nanoV_top.$flatten\nano.\core.$lt$../core.v:126$783 ($lt).
Removed top 3 bits (of 4) from port B of cell nanoV_top.$flatten\nano.\core.\i_registers.$procmux$983_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell nanoV_top.$flatten\nano.\core.\i_registers.$procmux$982_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell nanoV_top.$flatten\nano.\core.\i_registers.$procmux$981_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell nanoV_top.$flatten\nano.\core.\i_registers.$procmux$980_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell nanoV_top.$flatten\nano.\core.\i_registers.$procmux$979_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell nanoV_top.$flatten\nano.\core.\i_registers.$procmux$978_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell nanoV_top.$flatten\nano.\core.\i_registers.$procmux$977_CMP0 ($eq).
Removed top 30 bits (of 32) from mux cell nanoV_top.$flatten\nano.\core.\i_registers.$procmux$968 ($pmux).
Removed top 3 bits (of 4) from port B of cell nanoV_top.$flatten\nano.\core.\i_registers.$procmux$966_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell nanoV_top.$flatten\nano.\core.\i_registers.$procmux$965_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell nanoV_top.$flatten\nano.\core.\i_registers.$procmux$964_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell nanoV_top.$flatten\nano.\core.\i_registers.$procmux$963_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell nanoV_top.$flatten\nano.\core.\i_registers.$procmux$962_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell nanoV_top.$flatten\nano.\core.\i_registers.$procmux$961_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell nanoV_top.$flatten\nano.\core.\i_registers.$procmux$960_CMP0 ($eq).
Removed top 30 bits (of 32) from mux cell nanoV_top.$flatten\nano.\core.\i_registers.$procmux$951 ($pmux).
Removed top 1 bits (of 5) from port B of cell nanoV_top.$flatten\nano.\core.\i_registers.$eq$../register.v:119$905 ($eq).
Removed top 3 bits (of 4) from port B of cell nanoV_top.$auto$opt_dff.cc:195:make_patterns_logic$1904 ($ne).
Removed top 1 bits (of 3) from port B of cell nanoV_top.$auto$opt_dff.cc:195:make_patterns_logic$1906 ($ne).
Removed top 1 bits (of 4) from port B of cell nanoV_top.$flatten\nano.\core.\i_registers.$eq$../register.v:124$854 ($eq).
Removed top 1 bits (of 4) from port B of cell nanoV_top.$flatten\nano.\core.\i_registers.$eq$../register.v:124$849 ($eq).
Removed top 1 bits (of 4) from port B of cell nanoV_top.$flatten\nano.\core.\i_registers.$eq$../register.v:124$844 ($eq).
Removed top 2 bits (of 4) from port B of cell nanoV_top.$flatten\nano.\core.\i_registers.$eq$../register.v:124$839 ($eq).
Removed top 3 bits (of 4) from port B of cell nanoV_top.$flatten\nano.\core.\i_registers.$eq$../register.v:124$834 ($eq).
Removed top 1 bits (of 4) from port B of cell nanoV_top.$flatten\nano.\core.\i_registers.$ne$../register.v:40$824 ($ne).
Removed top 2 bits (of 4) from port B of cell nanoV_top.$flatten\nano.\core.\i_registers.$ne$../register.v:40$822 ($ne).
Removed top 1 bits (of 2) from port A of cell nanoV_top.$flatten\nano.\core.\alu.$add$../alu.v:25$803 ($add).
Removed top 1 bits (of 2) from port B of cell nanoV_top.$flatten\nano.\core.\alu.$add$../alu.v:25$803 ($add).
Removed top 5 bits (of 6) from port B of cell nanoV_top.$flatten\nano.\core.\shifter.$add$../shift.v:22$792 ($add).
Removed top 1 bits (of 6) from port A of cell nanoV_top.$flatten\nano.\core.\shifter.$add$../shift.v:22$791 ($add).
Removed top 1 bits (of 16) from mux cell nanoV_top.$flatten\nano.\core.\multiplier.$ternary$../multiply.v:38$787 ($mux).
Removed top 1 bits (of 3) from mux cell nanoV_top.$flatten\nano.$procmux$1397 ($mux).
Removed top 31 bits (of 32) from mux cell nanoV_top.$flatten\nano.$ternary$../cpu.v:235$639 ($mux).
Removed top 31 bits (of 32) from mux cell nanoV_top.$flatten\nano.$ternary$../cpu.v:236$637 ($mux).
Removed top 31 bits (of 32) from mux cell nanoV_top.$flatten\nano.$ternary$../cpu.v:237$635 ($mux).
Removed top 28 bits (of 32) from port B of cell nanoV_top.$flatten\nano.$gt$../cpu.v:223$625 ($gt).
Removed top 4 bits (of 5) from port B of cell nanoV_top.$auto$opt_dff.cc:195:make_patterns_logic$1962 ($ne).
Removed top 31 bits (of 32) from port B of cell nanoV_top.$flatten\nano.$add$../cpu.v:208$616 ($add).
Removed top 28 bits (of 32) from port Y of cell nanoV_top.$flatten\nano.$add$../cpu.v:208$616 ($add).
Removed top 2 bits (of 5) from port B of cell nanoV_top.$flatten\nano.$eq$../cpu.v:193$613 ($eq).
Removed top 1 bits (of 3) from port B of cell nanoV_top.$flatten\nano.$eq$../cpu.v:190$611 ($eq).
Removed top 4 bits (of 5) from port B of cell nanoV_top.$auto$opt_dff.cc:195:make_patterns_logic$1964 ($ne).
Removed top 27 bits (of 32) from port B of cell nanoV_top.$flatten\nano.$lt$../cpu.v:130$593 ($lt).
Removed top 10 bits (of 32) from mux cell nanoV_top.$flatten\nano.$ternary$../cpu.v:124$592 ($mux).
Removed top 29 bits (of 32) from port B of cell nanoV_top.$flatten\nano.$add$../cpu.v:124$590 ($add).
Removed top 10 bits (of 32) from port Y of cell nanoV_top.$flatten\nano.$add$../cpu.v:124$590 ($add).
Removed top 27 bits (of 32) from port B of cell nanoV_top.$flatten\nano.$lt$../cpu.v:120$575 ($lt).
Removed top 7 bits (of 29) from mux cell nanoV_top.$flatten\nano.$ternary$../cpu.v:100$572 ($mux).
Removed top 2 bits (of 3) from port B of cell nanoV_top.$flatten\nano.$eq$../cpu.v:72$561 ($eq).
Removed top 30 bits (of 32) from mux cell nanoV_top.$flatten\nano.$ternary$../cpu.v:71$556 ($mux).
Removed top 31 bits (of 32) from mux cell nanoV_top.$flatten\nano.$ternary$../cpu.v:70$551 ($mux).
Removed top 2 bits (of 5) from port B of cell nanoV_top.$flatten\nano.$eq$../cpu.v:69$545 ($eq).
Removed top 4 bits (of 6) from port B of cell nanoV_top.$auto$opt_dff.cc:195:make_patterns_logic$1958 ($ne).
Removed top 1 bits (of 2) from port B of cell nanoV_top.$flatten\nano.$eq$../cpu.v:36$538 ($eq).
Removed top 2 bits (of 5) from port B of cell nanoV_top.$flatten\nano.$ne$../cpu.v:35$529 ($ne).
Removed top 29 bits (of 32) from mux cell nanoV_top.$flatten\nano.$ternary$../cpu.v:52$512 ($mux).
Removed top 2 bits (of 5) from port B of cell nanoV_top.$auto$opt_dff.cc:195:make_patterns_logic$1960 ($ne).
Removed top 29 bits (of 32) from mux cell nanoV_top.$flatten\nano.$ternary$../cpu.v:51$507 ($mux).
Removed top 2 bits (of 3) from port B of cell nanoV_top.$flatten\nano.$eq$../cpu.v:51$501 ($eq).
Removed top 2 bits (of 3) from port B of cell nanoV_top.$flatten\nano.$add$../cpu.v:50$500 ($add).
Removed top 2 bits (of 5) from port B of cell nanoV_top.$flatten\nano.$eq$../cpu.v:42$489 ($eq).
Removed top 2 bits (of 5) from port B of cell nanoV_top.$flatten\nano.$ne$../cpu.v:41$487 ($ne).
Removed top 27 bits (of 32) from port A of cell nanoV_top.$flatten\nano.$add$../cpu.v:24$481 ($add).
Removed top 31 bits (of 32) from port B of cell nanoV_top.$flatten\nano.$add$../cpu.v:24$481 ($add).
Removed top 26 bits (of 32) from port Y of cell nanoV_top.$flatten\nano.$add$../cpu.v:24$481 ($add).
Removed top 1 bits (of 2) from port B of cell nanoV_top.$auto$fsm_map.cc:77:implement_pattern_cache$1763 ($eq).
Removed top 3 bits (of 4) from mux cell nanoV_top.$flatten\i_uart_tx.$procmux$1520 ($mux).
Removed top 1 bits (of 4) from port B of cell nanoV_top.$auto$opt_dff.cc:195:make_patterns_logic$1966 ($ne).
Removed top 3 bits (of 4) from port B of cell nanoV_top.$flatten\i_uart_tx.$eq$../uart/uart_tx.v:153$476 ($eq).
Removed top 31 bits (of 32) from port B of cell nanoV_top.$flatten\i_uart_tx.$add$../uart/uart_tx.v:100$473 ($add).
Removed top 28 bits (of 32) from port Y of cell nanoV_top.$flatten\i_uart_tx.$add$../uart/uart_tx.v:100$473 ($add).
Removed top 28 bits (of 32) from port B of cell nanoV_top.$flatten\i_uart_tx.$lt$../uart/uart_tx.v:118$454 ($lt).
Removed top 30 bits (of 32) from port B of cell nanoV_top.$flatten\i_uart_tx.$ge$../uart/uart_tx.v:118$453 ($ge).
Removed top 31 bits (of 32) from port B of cell nanoV_top.$flatten\i_uart_rx.$gt$../uart/uart_rx.v:170$443 ($gt).
Removed top 28 bits (of 32) from mux cell nanoV_top.$flatten\i_uart_rx.$ternary$../uart/uart_rx.v:111$440 ($mux).
Removed top 31 bits (of 32) from port B of cell nanoV_top.$flatten\i_uart_rx.$add$../uart/uart_rx.v:111$438 ($add).
Removed top 28 bits (of 32) from port Y of cell nanoV_top.$flatten\i_uart_rx.$add$../uart/uart_rx.v:111$438 ($add).
Removed top 28 bits (of 32) from mux cell nanoV_top.$flatten\i_uart_rx.$ternary$../uart/uart_rx.v:109$437 ($mux).
Removed top 28 bits (of 32) from mux cell nanoV_top.$flatten\i_uart_rx.$ternary$../uart/uart_rx.v:107$436 ($mux).
Removed top 28 bits (of 32) from mux cell nanoV_top.$flatten\i_uart_rx.$ternary$../uart/uart_rx.v:107$435 ($mux).
Removed top 31 bits (of 32) from mux cell nanoV_top.$flatten\i_uart_rx.$ternary$../uart/uart_rx.v:104$434 ($mux).
Removed top 28 bits (of 32) from port B of cell nanoV_top.$flatten\i_uart_rx.$lt$../uart/uart_rx.v:126$417 ($lt).
Removed top 30 bits (of 32) from port B of cell nanoV_top.$flatten\i_uart_rx.$ge$../uart/uart_rx.v:126$416 ($ge).
Removed top 1 bits (of 8) from port B of cell nanoV_top.$flatten\i_uart_rx.$eq$../uart/uart_rx.v:98$412 ($eq).
Removed top 28 bits (of 32) from wire nanoV_top.$flatten\i_uart_rx.$add$../uart/uart_rx.v:111$438_Y.
Removed top 31 bits (of 32) from wire nanoV_top.$flatten\i_uart_rx.$ternary$../uart/uart_rx.v:104$434_Y.
Removed top 28 bits (of 32) from wire nanoV_top.$flatten\i_uart_rx.$ternary$../uart/uart_rx.v:107$435_Y.
Removed top 29 bits (of 32) from wire nanoV_top.$flatten\i_uart_rx.$ternary$../uart/uart_rx.v:107$436_Y.
Removed top 29 bits (of 32) from wire nanoV_top.$flatten\i_uart_rx.$ternary$../uart/uart_rx.v:109$437_Y.
Removed top 1 bits (of 3) from wire nanoV_top.$flatten\nano.$6\cycles_for_instr$func$../cpu.v:64$480.$result[2:0]$541.
Removed top 10 bits (of 32) from wire nanoV_top.$flatten\nano.$add$../cpu.v:124$590_Y.
Removed top 28 bits (of 32) from wire nanoV_top.$flatten\nano.$add$../cpu.v:208$616_Y.
Removed top 29 bits (of 32) from wire nanoV_top.$flatten\nano.$add$../cpu.v:24$481_Y.
Removed top 31 bits (of 32) from wire nanoV_top.$flatten\nano.$ternary$../cpu.v:236$637_Y.
Removed top 31 bits (of 32) from wire nanoV_top.$flatten\nano.$ternary$../cpu.v:70$551_Y.
Removed top 30 bits (of 32) from wire nanoV_top.$flatten\nano.$ternary$../cpu.v:71$556_Y.
Removed top 30 bits (of 32) from wire nanoV_top.$flatten\nano.\core.$ternary$../core.v:52$670_Y.
Removed top 30 bits (of 32) from wire nanoV_top.$flatten\nano.\core.\i_registers.$0$mem2reg_rd$\reg_access$../register.v:142$818_DATA[31:0]$899.
Removed top 30 bits (of 32) from wire nanoV_top.$flatten\nano.\core.\i_registers.$0$mem2reg_rd$\reg_access$../register.v:143$819_DATA[31:0]$902.
Removed top 1 bits (of 16) from wire nanoV_top.$flatten\nano.\core.\multiplier.$0\accum[15:0].
Removed top 24 bits (of 32) from wire nanoV_top.$ternary$pico_ice.v:93$402_Y.
Removed top 24 bits (of 32) from wire nanoV_top.$ternary$pico_ice.v:94$400_Y.
Removed top 30 bits (of 32) from wire nanoV_top.$ternary$pico_ice.v:95$398_Y.

10.15. Executing PEEPOPT pass (run peephole optimizers).

10.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \nanoV_top..
Removed 0 unused cells and 25 unused wires.
<suppressed ~1 debug messages>

10.17. Executing SHARE pass (SAT-based resource sharing).

10.18. Executing TECHMAP pass (map to technology primitives).

10.18.1. Executing Verilog-2005 frontend: /home/devel/oss-cad-suite/lib/../share/yosys/cmp2lut.v
Parsing Verilog input from `/home/devel/oss-cad-suite/lib/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

10.18.2. Continuing TECHMAP pass.
Using template $paramod$cfdad2d5c6ed189d9565d7e849f44dc84ae90046\_90_lut_cmp_ for cells of type $lt.
Using template $paramod$fd3a338331ce77d5c60504e1108b754e9b73ee37\_90_lut_cmp_ for cells of type $lt.
Using template $paramod$bb3596e97c6b902bcd3ddf37d0931e845fce78b1\_90_lut_cmp_ for cells of type $ge.
Using template $paramod$106e7676feb63f00b8f79ebab3ff16b0f4c109cb\_90_lut_cmp_ for cells of type $gt.
No more expansions possible.
<suppressed ~258 debug messages>

10.19. Executing OPT_EXPR pass (perform const folding).
Optimizing module nanoV_top.

10.20. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \nanoV_top..
Removed 0 unused cells and 18 unused wires.
<suppressed ~1 debug messages>

10.21. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module nanoV_top:
  creating $macc model for $flatten\i_uart_rx.$add$../uart/uart_rx.v:111$438 ($add).
  creating $macc model for $flatten\i_uart_rx.$add$../uart/uart_rx.v:150$428 ($add).
  creating $macc model for $flatten\i_uart_tx.$add$../uart/uart_tx.v:100$473 ($add).
  creating $macc model for $flatten\i_uart_tx.$add$../uart/uart_tx.v:132$460 ($add).
  creating $macc model for $flatten\nano.$add$../cpu.v:124$590 ($add).
  creating $macc model for $flatten\nano.$add$../cpu.v:208$616 ($add).
  creating $macc model for $flatten\nano.$add$../cpu.v:24$481 ($add).
  creating $macc model for $flatten\nano.$add$../cpu.v:50$500 ($add).
  creating $macc model for $flatten\nano.\core.\alu.$add$../alu.v:25$803 ($add).
  creating $macc model for $flatten\nano.\core.\alu.$add$../alu.v:25$804 ($add).
  creating $macc model for $flatten\nano.\core.\multiplier.$add$../multiply.v:35$785 ($add).
  creating $macc model for $flatten\nano.\core.\shifter.$add$../shift.v:22$791 ($add).
  creating $macc model for $flatten\nano.\core.\shifter.$add$../shift.v:22$792 ($add).
  merging $macc model for $flatten\nano.\core.\shifter.$add$../shift.v:22$791 into $flatten\nano.\core.\shifter.$add$../shift.v:22$792.
  merging $macc model for $flatten\nano.\core.\alu.$add$../alu.v:25$803 into $flatten\nano.\core.\alu.$add$../alu.v:25$804.
  creating $alu model for $macc $flatten\nano.\core.\multiplier.$add$../multiply.v:35$785.
  creating $alu model for $macc $flatten\nano.\core.\alu.$add$../alu.v:25$804.
  creating $alu model for $macc $flatten\nano.\core.\shifter.$add$../shift.v:22$792.
  creating $alu model for $macc $flatten\nano.$add$../cpu.v:50$500.
  creating $alu model for $macc $flatten\nano.$add$../cpu.v:24$481.
  creating $alu model for $macc $flatten\nano.$add$../cpu.v:208$616.
  creating $alu model for $macc $flatten\nano.$add$../cpu.v:124$590.
  creating $alu model for $macc $flatten\i_uart_tx.$add$../uart/uart_tx.v:132$460.
  creating $alu model for $macc $flatten\i_uart_tx.$add$../uart/uart_tx.v:100$473.
  creating $alu model for $macc $flatten\i_uart_rx.$add$../uart/uart_rx.v:150$428.
  creating $alu model for $macc $flatten\i_uart_rx.$add$../uart/uart_rx.v:111$438.
  creating $alu model for $flatten\nano.$gt$../cpu.v:223$625 ($gt): new $alu
  creating $alu model for $flatten\nano.$lt$../cpu.v:120$575 ($lt): new $alu
  creating $alu model for $flatten\nano.$lt$../cpu.v:130$593 ($lt): new $alu
  creating $alu model for $flatten\nano.\core.$lt$../core.v:126$781 ($lt): new $alu
  creating $alu model for $flatten\nano.\core.$lt$../core.v:89$726 ($lt): new $alu
  creating $alu cell for $flatten\nano.\core.$lt$../core.v:89$726: $auto$alumacc.cc:485:replace_alu$2041
  creating $alu cell for $flatten\nano.\core.$lt$../core.v:126$781: $auto$alumacc.cc:485:replace_alu$2052
  creating $alu cell for $flatten\nano.$lt$../cpu.v:130$593: $auto$alumacc.cc:485:replace_alu$2063
  creating $alu cell for $flatten\nano.$lt$../cpu.v:120$575: $auto$alumacc.cc:485:replace_alu$2074
  creating $alu cell for $flatten\nano.$gt$../cpu.v:223$625: $auto$alumacc.cc:485:replace_alu$2085
  creating $alu cell for $flatten\i_uart_rx.$add$../uart/uart_rx.v:111$438: $auto$alumacc.cc:485:replace_alu$2090
  creating $alu cell for $flatten\i_uart_rx.$add$../uart/uart_rx.v:150$428: $auto$alumacc.cc:485:replace_alu$2093
  creating $alu cell for $flatten\i_uart_tx.$add$../uart/uart_tx.v:100$473: $auto$alumacc.cc:485:replace_alu$2096
  creating $alu cell for $flatten\i_uart_tx.$add$../uart/uart_tx.v:132$460: $auto$alumacc.cc:485:replace_alu$2099
  creating $alu cell for $flatten\nano.$add$../cpu.v:124$590: $auto$alumacc.cc:485:replace_alu$2102
  creating $alu cell for $flatten\nano.$add$../cpu.v:208$616: $auto$alumacc.cc:485:replace_alu$2105
  creating $alu cell for $flatten\nano.$add$../cpu.v:24$481: $auto$alumacc.cc:485:replace_alu$2108
  creating $alu cell for $flatten\nano.$add$../cpu.v:50$500: $auto$alumacc.cc:485:replace_alu$2111
  creating $alu cell for $flatten\nano.\core.\shifter.$add$../shift.v:22$792: $auto$alumacc.cc:485:replace_alu$2114
  creating $alu cell for $flatten\nano.\core.\alu.$add$../alu.v:25$804: $auto$alumacc.cc:485:replace_alu$2117
  creating $alu cell for $flatten\nano.\core.\multiplier.$add$../multiply.v:35$785: $auto$alumacc.cc:485:replace_alu$2120
  created 16 $alu and 0 $macc cells.

10.22. Executing OPT pass (performing simple optimizations).

10.22.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module nanoV_top.
<suppressed ~1 debug messages>

10.22.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\nanoV_top'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

10.22.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \nanoV_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~77 debug messages>

10.22.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \nanoV_top.
Performed a total of 0 changes.

10.22.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\nanoV_top'.
Removed a total of 0 cells.

10.22.6. Executing OPT_DFF pass (perform DFF optimizations).

10.22.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \nanoV_top..
Removed 3 unused cells and 9 unused wires.
<suppressed ~5 debug messages>

10.22.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module nanoV_top.

10.22.9. Rerunning OPT passes. (Maybe there is more to do..)

10.22.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \nanoV_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~77 debug messages>

10.22.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \nanoV_top.
Performed a total of 0 changes.

10.22.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\nanoV_top'.
Removed a total of 0 cells.

10.22.13. Executing OPT_DFF pass (perform DFF optimizations).

10.22.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \nanoV_top..

10.22.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module nanoV_top.

10.22.16. Finished OPT passes. (There is nothing left to do.)

10.23. Executing MEMORY pass.

10.23.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

10.23.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

10.23.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

10.23.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

10.23.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

10.23.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \nanoV_top..

10.23.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

10.23.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

10.23.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \nanoV_top..

10.23.10. Executing MEMORY_COLLECT pass (generating $mem cells).

10.24. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \nanoV_top..

10.25. Executing MEMORY_LIBMAP pass (mapping memories to cells).

10.26. Executing TECHMAP pass (map to technology primitives).

10.26.1. Executing Verilog-2005 frontend: /home/devel/oss-cad-suite/lib/../share/yosys/ice40/brams_map.v
Parsing Verilog input from `/home/devel/oss-cad-suite/lib/../share/yosys/ice40/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_RAM4K_'.
Successfully finished Verilog frontend.

10.26.2. Executing Verilog-2005 frontend: /home/devel/oss-cad-suite/lib/../share/yosys/ice40/spram_map.v
Parsing Verilog input from `/home/devel/oss-cad-suite/lib/../share/yosys/ice40/spram_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_SPRAM_'.
Successfully finished Verilog frontend.

10.26.3. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

10.27. Executing ICE40_BRAMINIT pass.

10.28. Executing OPT pass (performing simple optimizations).

10.28.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module nanoV_top.
<suppressed ~50 debug messages>

10.28.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\nanoV_top'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

10.28.3. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:266:slice$1830 ($sdffe) from module nanoV_top (D = $flatten\nano.$procmux$1101_Y [1:0], Q = \nano.pc [1:0]).

10.28.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \nanoV_top..
Removed 3 unused cells and 51 unused wires.
<suppressed ~4 debug messages>

10.28.5. Rerunning OPT passes. (Removed registers in this run.)

10.28.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module nanoV_top.
<suppressed ~5 debug messages>

10.28.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\nanoV_top'.
Removed a total of 0 cells.

10.28.8. Executing OPT_DFF pass (perform DFF optimizations).

10.28.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \nanoV_top..
Removed 0 unused cells and 4 unused wires.
<suppressed ~1 debug messages>

10.28.10. Finished fast OPT passes.

10.29. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

10.30. Executing OPT pass (performing simple optimizations).

10.30.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module nanoV_top.

10.30.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\nanoV_top'.
Removed a total of 0 cells.

10.30.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \nanoV_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~69 debug messages>

10.30.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \nanoV_top.
    Consolidated identical input bits for $mux cell $flatten\i_uart_rx.$ternary$../uart/uart_rx.v:107$435:
      Old ports: A=4'0000, B=4'1011, Y=$auto$wreduce.cc:461:run$2008 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:461:run$2008 [0]
      New connections: $auto$wreduce.cc:461:run$2008 [3:1] = { $auto$wreduce.cc:461:run$2008 [0] 1'0 $auto$wreduce.cc:461:run$2008 [0] }
    Consolidated identical input bits for $mux cell $flatten\i_uart_rx.$ternary$../uart/uart_rx.v:109$437:
      Old ports: A=4'1011, B=4'0000, Y=$auto$wreduce.cc:461:run$2010 [3:0]
      New ports: A=1'1, B=1'0, Y=$auto$wreduce.cc:461:run$2010 [0]
      New connections: $auto$wreduce.cc:461:run$2010 [3:1] = { $auto$wreduce.cc:461:run$2010 [0] 1'0 $auto$wreduce.cc:461:run$2010 [0] }
    Consolidated identical input bits for $mux cell $flatten\nano.$ternary$../cpu.v:71$556:
      Old ports: A=2'00, B=2'10, Y=$auto$wreduce.cc:461:run$2017 [1:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:461:run$2017 [1]
      New connections: $auto$wreduce.cc:461:run$2017 [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\nano.\core.$ternary$../core.v:52$670:
      Old ports: A=2'10, B=2'00, Y=$auto$wreduce.cc:461:run$2018 [1:0]
      New ports: A=1'1, B=1'0, Y=$auto$wreduce.cc:461:run$2018 [1]
      New connections: $auto$wreduce.cc:461:run$2018 [0] = 1'0
  Optimizing cells in module \nanoV_top.
    Consolidated identical input bits for $mux cell $flatten\i_uart_rx.$ternary$../uart/uart_rx.v:107$436:
      Old ports: A=4'1010, B=$auto$wreduce.cc:461:run$2008 [3:0], Y=$auto$wreduce.cc:461:run$2009 [3:0]
      New ports: A=2'10, B={ $auto$wreduce.cc:461:run$2008 [0] $auto$wreduce.cc:461:run$2008 [0] }, Y=$auto$wreduce.cc:461:run$2009 [1:0]
      New connections: $auto$wreduce.cc:461:run$2009 [3:2] = { $auto$wreduce.cc:461:run$2009 [1] 1'0 }
  Optimizing cells in module \nanoV_top.
Performed a total of 5 changes.

10.30.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\nanoV_top'.
Removed a total of 0 cells.

10.30.6. Executing OPT_DFF pass (perform DFF optimizations).

10.30.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \nanoV_top..

10.30.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module nanoV_top.

10.30.9. Rerunning OPT passes. (Maybe there is more to do..)

10.30.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \nanoV_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~69 debug messages>

10.30.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \nanoV_top.
Performed a total of 0 changes.

10.30.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\nanoV_top'.
Removed a total of 0 cells.

10.30.13. Executing OPT_DFF pass (perform DFF optimizations).

10.30.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \nanoV_top..

10.30.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module nanoV_top.

10.30.16. Finished OPT passes. (There is nothing left to do.)

10.31. Executing ICE40_WRAPCARRY pass (wrap carries).

10.32. Executing TECHMAP pass (map to technology primitives).

10.32.1. Executing Verilog-2005 frontend: /home/devel/oss-cad-suite/lib/../share/yosys/techmap.v
Parsing Verilog input from `/home/devel/oss-cad-suite/lib/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu_brent_kung'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

10.32.2. Executing Verilog-2005 frontend: /home/devel/oss-cad-suite/lib/../share/yosys/ice40/arith_map.v
Parsing Verilog input from `/home/devel/oss-cad-suite/lib/../share/yosys/ice40/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_ice40_alu'.
Successfully finished Verilog frontend.

10.32.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $logic_and.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $lut.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $sdff.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $reduce_and.
Using template $paramod$f85408ed1aa3d09e465edae8a7bf590332ae9f7b\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $logic_or.
Using extmapper simplemap for cells of type $or.
Using template $paramod$constmap:09e8cffe755c4655b20709a667f3c8a396cf4419$paramod$e194a9e890de0a7be18db8bd15a1479dea055e42\_90_shift_shiftx for cells of type $shiftx.
Analyzing pattern of constant bits for this cell:
  Bit 12 of port A and bit 11 of port A are connected.
  Bit 13 of port A and bit 11 of port A are connected.
  Bit 14 of port A and bit 11 of port A are connected.
  Bit 15 of port A and bit 11 of port A are connected.
  Bit 16 of port A and bit 11 of port A are connected.
  Bit 17 of port A and bit 11 of port A are connected.
  Bit 18 of port A and bit 11 of port A are connected.
  Bit 19 of port A and bit 11 of port A are connected.
  Bit 20 of port A and bit 11 of port A are connected.
  Bit 21 of port A and bit 11 of port A are connected.
  Bit 22 of port A and bit 11 of port A are connected.
  Bit 23 of port A and bit 11 of port A are connected.
  Bit 24 of port A and bit 11 of port A are connected.
  Bit 25 of port A and bit 11 of port A are connected.
  Bit 26 of port A and bit 11 of port A are connected.
  Bit 27 of port A and bit 11 of port A are connected.
  Bit 28 of port A and bit 11 of port A are connected.
  Bit 29 of port A and bit 11 of port A are connected.
  Bit 30 of port A and bit 11 of port A are connected.
  Bit 31 of port A and bit 11 of port A are connected.
Creating constmapped module `$paramod$constmap:ba1700f3340aeadd21b29242e4780c97fbddd699$paramod$e194a9e890de0a7be18db8bd15a1479dea055e42\_90_shift_shiftx'.

10.32.11. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$constmap:ba1700f3340aeadd21b29242e4780c97fbddd699$paramod$e194a9e890de0a7be18db8bd15a1479dea055e42\_90_shift_shiftx..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $procmux$3050.
    dead port 2/2 on $mux $procmux$3044.
    dead port 2/2 on $mux $procmux$3038.
    dead port 2/2 on $mux $procmux$3032.
    dead port 2/2 on $mux $procmux$3026.
Removed 5 multiplexer ports.
<suppressed ~362 debug messages>

10.32.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$constmap:ba1700f3340aeadd21b29242e4780c97fbddd699$paramod$e194a9e890de0a7be18db8bd15a1479dea055e42\_90_shift_shiftx.
<suppressed ~3 debug messages>
Removed 0 unused cells and 11 unused wires.
Using template $paramod$constmap:ba1700f3340aeadd21b29242e4780c97fbddd699$paramod$e194a9e890de0a7be18db8bd15a1479dea055e42\_90_shift_shiftx for cells of type $shiftx.
Analyzing pattern of constant bits for this cell:
  Constant input on bit 0 of port A: 1'0
  Bit 13 of port A and bit 12 of port A are connected.
  Bit 14 of port A and bit 12 of port A are connected.
  Bit 15 of port A and bit 12 of port A are connected.
  Bit 16 of port A and bit 12 of port A are connected.
  Bit 17 of port A and bit 12 of port A are connected.
  Bit 18 of port A and bit 12 of port A are connected.
  Bit 19 of port A and bit 12 of port A are connected.
  Bit 20 of port A and bit 12 of port A are connected.
  Bit 21 of port A and bit 12 of port A are connected.
  Bit 22 of port A and bit 12 of port A are connected.
  Bit 23 of port A and bit 12 of port A are connected.
  Bit 24 of port A and bit 12 of port A are connected.
  Bit 25 of port A and bit 12 of port A are connected.
  Bit 26 of port A and bit 12 of port A are connected.
  Bit 27 of port A and bit 12 of port A are connected.
  Bit 28 of port A and bit 12 of port A are connected.
  Bit 29 of port A and bit 12 of port A are connected.
  Bit 30 of port A and bit 12 of port A are connected.
  Bit 31 of port A and bit 12 of port A are connected.
Creating constmapped module `$paramod$constmap:bfe5dce9e0f4c5e2266292dcb8ec2c739cb552b3$paramod$e194a9e890de0a7be18db8bd15a1479dea055e42\_90_shift_shiftx'.

10.32.13. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$constmap:bfe5dce9e0f4c5e2266292dcb8ec2c739cb552b3$paramod$e194a9e890de0a7be18db8bd15a1479dea055e42\_90_shift_shiftx..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $procmux$3050.
    dead port 2/2 on $mux $procmux$3044.
    dead port 2/2 on $mux $procmux$3038.
    dead port 2/2 on $mux $procmux$3032.
    dead port 2/2 on $mux $procmux$3026.
Removed 5 multiplexer ports.
<suppressed ~14 debug messages>

10.32.14. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$constmap:bfe5dce9e0f4c5e2266292dcb8ec2c739cb552b3$paramod$e194a9e890de0a7be18db8bd15a1479dea055e42\_90_shift_shiftx.
<suppressed ~3 debug messages>
Removed 0 unused cells and 11 unused wires.
Using template $paramod$constmap:bfe5dce9e0f4c5e2266292dcb8ec2c739cb552b3$paramod$e194a9e890de0a7be18db8bd15a1479dea055e42\_90_shift_shiftx for cells of type $shiftx.
Analyzing pattern of constant bits for this cell:
  Constant input on bit 0 of port A: 1'0
  Constant input on bit 1 of port A: 1'0
  Constant input on bit 2 of port A: 1'0
  Constant input on bit 3 of port A: 1'0
  Constant input on bit 4 of port A: 1'0
  Constant input on bit 5 of port A: 1'0
  Constant input on bit 6 of port A: 1'0
  Constant input on bit 7 of port A: 1'0
  Constant input on bit 8 of port A: 1'0
  Constant input on bit 9 of port A: 1'0
  Constant input on bit 10 of port A: 1'0
  Constant input on bit 11 of port A: 1'0
Creating constmapped module `$paramod$constmap:0a7d3e565dd5506d8282ab0bde3636f22c7bf390$paramod$e194a9e890de0a7be18db8bd15a1479dea055e42\_90_shift_shiftx'.

10.32.15. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$constmap:0a7d3e565dd5506d8282ab0bde3636f22c7bf390$paramod$e194a9e890de0a7be18db8bd15a1479dea055e42\_90_shift_shiftx..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $procmux$3050.
    dead port 2/2 on $mux $procmux$3044.
    dead port 2/2 on $mux $procmux$3038.
    dead port 2/2 on $mux $procmux$3032.
    dead port 2/2 on $mux $procmux$3026.
Removed 5 multiplexer ports.
<suppressed ~11 debug messages>

10.32.16. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$constmap:0a7d3e565dd5506d8282ab0bde3636f22c7bf390$paramod$e194a9e890de0a7be18db8bd15a1479dea055e42\_90_shift_shiftx.
<suppressed ~3 debug messages>
Removed 0 unused cells and 11 unused wires.
Using template $paramod$constmap:0a7d3e565dd5506d8282ab0bde3636f22c7bf390$paramod$e194a9e890de0a7be18db8bd15a1479dea055e42\_90_shift_shiftx for cells of type $shiftx.
Using template $paramod$b18e16801adf491a64caa0542270798e5d4ac6b6\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $xor.
Using template $paramod$0527bd31598f45e3570b8d820612753f6716c8a4\_90_pmux for cells of type $pmux.
Using template $paramod$1d1e68f77481583066c6d429218f48ea9d5739b3\_90_alu for cells of type $alu.
Using template $paramod$b3b6ac92d800c6f07aa48f510f923d86a674e5a7\_90_pmux for cells of type $pmux.
Using template $paramod$081ba1a4a7201ecdb44563d3c3bd7013d1ebf4eb\_80_ice40_alu for cells of type $alu.
Analyzing pattern of constant bits for this cell:
Creating constmapped module `$paramod$constmap:e2101c44e3f83a0dc2da774cd1fdd19ff2da5f4f$paramod$e194a9e890de0a7be18db8bd15a1479dea055e42\_90_shift_shiftx'.

10.32.28. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$constmap:e2101c44e3f83a0dc2da774cd1fdd19ff2da5f4f$paramod$e194a9e890de0a7be18db8bd15a1479dea055e42\_90_shift_shiftx..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $procmux$3050.
    dead port 2/2 on $mux $procmux$3044.
    dead port 2/2 on $mux $procmux$3038.
    dead port 2/2 on $mux $procmux$3032.
    dead port 2/2 on $mux $procmux$3026.
Removed 5 multiplexer ports.
<suppressed ~337 debug messages>

10.32.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$constmap:e2101c44e3f83a0dc2da774cd1fdd19ff2da5f4f$paramod$e194a9e890de0a7be18db8bd15a1479dea055e42\_90_shift_shiftx.
<suppressed ~3 debug messages>
Removed 0 unused cells and 11 unused wires.
Using template $paramod$constmap:e2101c44e3f83a0dc2da774cd1fdd19ff2da5f4f$paramod$e194a9e890de0a7be18db8bd15a1479dea055e42\_90_shift_shiftx for cells of type $shiftx.
Using extmapper simplemap for cells of type $sdffe.
Using template $paramod$32a7b7b86c07519b7537abc18e96f0331f97914d\_80_ice40_alu for cells of type $alu.
Using template $paramod$5e23d2e0f07f5403e3d2c5b606bab0c16e4174c1\_80_ice40_alu for cells of type $alu.
Using template $paramod$bfceb922395790c0ce92e9f9b5b428d4fc72cc30\_80_ice40_alu for cells of type $alu.
Using template $paramod$1a3a0c35c4a4896fbfd612699525c057298e72d2\_80_ice40_alu for cells of type $alu.
Analyzing pattern of constant bits for this cell:
  Constant input on bit 8 of port A: 1'0
  Constant input on bit 9 of port A: 1'0
  Constant input on bit 10 of port A: 1'0
  Constant input on bit 11 of port A: 1'0
  Constant input on bit 12 of port A: 1'0
  Constant input on bit 13 of port A: 1'0
  Constant input on bit 14 of port A: 1'0
  Constant input on bit 15 of port A: 1'0
  Constant input on bit 16 of port A: 1'0
  Constant input on bit 17 of port A: 1'0
  Constant input on bit 18 of port A: 1'0
  Constant input on bit 19 of port A: 1'0
  Constant input on bit 20 of port A: 1'0
  Constant input on bit 21 of port A: 1'0
  Constant input on bit 22 of port A: 1'0
  Constant input on bit 23 of port A: 1'0
  Constant input on bit 24 of port A: 1'0
  Constant input on bit 25 of port A: 1'0
  Constant input on bit 26 of port A: 1'0
  Constant input on bit 27 of port A: 1'0
  Constant input on bit 28 of port A: 1'0
  Constant input on bit 29 of port A: 1'0
  Constant input on bit 30 of port A: 1'0
  Constant input on bit 31 of port A: 1'0
Creating constmapped module `$paramod$constmap:780a5c8ef07420d666b03e19ff35fc357a4a20c3$paramod$e194a9e890de0a7be18db8bd15a1479dea055e42\_90_shift_shiftx'.

10.32.38. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$constmap:780a5c8ef07420d666b03e19ff35fc357a4a20c3$paramod$e194a9e890de0a7be18db8bd15a1479dea055e42\_90_shift_shiftx..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $procmux$3050.
    dead port 2/2 on $mux $procmux$3044.
    dead port 2/2 on $mux $procmux$3038.
    dead port 2/2 on $mux $procmux$3032.
    dead port 2/2 on $mux $procmux$3026.
Removed 5 multiplexer ports.
<suppressed ~187 debug messages>

10.32.39. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$constmap:780a5c8ef07420d666b03e19ff35fc357a4a20c3$paramod$e194a9e890de0a7be18db8bd15a1479dea055e42\_90_shift_shiftx.
<suppressed ~3 debug messages>
Removed 0 unused cells and 11 unused wires.
Using template $paramod$constmap:780a5c8ef07420d666b03e19ff35fc357a4a20c3$paramod$e194a9e890de0a7be18db8bd15a1479dea055e42\_90_shift_shiftx for cells of type $shiftx.
Using template $paramod$e04283ca12514baf3d204c6994bec8f178dd89f8\_80_ice40_alu for cells of type $alu.
Using template $paramod$3ef7d3dd227da7627a99c5e5a6a4deb817573e39\_80_ice40_alu for cells of type $alu.
Using template $paramod$c3cd1564c35d873179656addd6052d7ea8b6d991\_80_ice40_alu for cells of type $alu.
Using template $paramod$ce0ec84be7047712840b0952f343ee9e63ef75d1\_80_ice40_alu for cells of type $alu.
Using template $paramod$c2e415ef15bc3ccd2723772353a6b450d3d76206\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu_brent_kung\WIDTH=32'00000000000000000000000000000010 for cells of type $lcu.
No more expansions possible.
<suppressed ~503 debug messages>

10.33. Executing OPT pass (performing simple optimizations).

10.33.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module nanoV_top.
<suppressed ~1271 debug messages>

10.33.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\nanoV_top'.
<suppressed ~2025 debug messages>
Removed a total of 675 cells.

10.33.3. Executing OPT_DFF pass (perform DFF optimizations).

10.33.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \nanoV_top..
Removed 660 unused cells and 1021 unused wires.
<suppressed ~662 debug messages>

10.33.5. Finished fast OPT passes.

10.34. Executing ICE40_OPT pass (performing simple optimizations).

10.34.1. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) nanoV_top.$auto$alumacc.cc:485:replace_alu$2041.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$2041.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) nanoV_top.$auto$alumacc.cc:485:replace_alu$2052.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$2052.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) nanoV_top.$auto$alumacc.cc:485:replace_alu$2063.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$2052.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) nanoV_top.$auto$alumacc.cc:485:replace_alu$2074.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$2052.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) nanoV_top.$auto$alumacc.cc:485:replace_alu$2085.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$2041.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) nanoV_top.$auto$alumacc.cc:485:replace_alu$2090.slice[0].carry: CO=\i_uart_rx.fsm_state [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) nanoV_top.$auto$alumacc.cc:485:replace_alu$2093.slice[0].carry: CO=\i_uart_rx.cycle_counter [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) nanoV_top.$auto$alumacc.cc:485:replace_alu$2096.slice[0].carry: CO=\i_uart_tx.fsm_state [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) nanoV_top.$auto$alumacc.cc:485:replace_alu$2099.slice[0].carry: CO=\i_uart_tx.cycle_counter [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) nanoV_top.$auto$alumacc.cc:485:replace_alu$2102.slice[0].carry: CO=\nano.pc [2]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) nanoV_top.$auto$alumacc.cc:485:replace_alu$2105.slice[0].carry: CO=\nano.cycle [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) nanoV_top.$auto$alumacc.cc:485:replace_alu$2105.slice[3].carry: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) nanoV_top.$auto$alumacc.cc:485:replace_alu$2108.slice[0].carry: CO=\nano.counter [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) nanoV_top.$auto$alumacc.cc:485:replace_alu$2108.slice[5].carry: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) nanoV_top.$auto$alumacc.cc:485:replace_alu$2120.slice[16].carry: CO=1'0

10.34.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module nanoV_top.
<suppressed ~17 debug messages>

10.34.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\nanoV_top'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

10.34.4. Executing OPT_DFF pass (perform DFF optimizations).

10.34.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \nanoV_top..
Removed 2 unused cells and 3 unused wires.
<suppressed ~3 debug messages>

10.34.6. Rerunning OPT passes. (Removed registers in this run.)

10.34.7. Running ICE40 specific optimizations.

10.34.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module nanoV_top.

10.34.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\nanoV_top'.
Removed a total of 0 cells.

10.34.10. Executing OPT_DFF pass (perform DFF optimizations).

10.34.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \nanoV_top..

10.34.12. Finished OPT passes. (There is nothing left to do.)

10.35. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

10.36. Executing TECHMAP pass (map to technology primitives).

10.36.1. Executing Verilog-2005 frontend: /home/devel/oss-cad-suite/lib/../share/yosys/ice40/ff_map.v
Parsing Verilog input from `/home/devel/oss-cad-suite/lib/../share/yosys/ice40/ff_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFFCE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP1P_'.
Successfully finished Verilog frontend.

10.36.2. Continuing TECHMAP pass.
Using template \$_SDFFCE_PP0P_ for cells of type $_SDFFCE_PP0P_.
Using template \$_SDFF_PP0_ for cells of type $_SDFF_PP0_.
Using template \$_SDFF_PP1_ for cells of type $_SDFF_PP1_.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using template \$_SDFFCE_PP1P_ for cells of type $_SDFFCE_PP1P_.
Using template \$_DFFE_PP_ for cells of type $_DFFE_PP_.
Using template \$_DFF_N_ for cells of type $_DFF_N_.
No more expansions possible.
<suppressed ~664 debug messages>

10.37. Executing OPT_EXPR pass (perform const folding).
Optimizing module nanoV_top.

10.38. Executing SIMPLEMAP pass (map simple cells to gate primitives).
Mapping nanoV_top.$auto$alumacc.cc:485:replace_alu$2090.slice[0].carry ($lut).
Mapping nanoV_top.$auto$alumacc.cc:485:replace_alu$2093.slice[0].carry ($lut).
Mapping nanoV_top.$auto$alumacc.cc:485:replace_alu$2096.slice[0].carry ($lut).
Mapping nanoV_top.$auto$alumacc.cc:485:replace_alu$2099.slice[0].carry ($lut).
Mapping nanoV_top.$auto$alumacc.cc:485:replace_alu$2102.slice[0].carry ($lut).
Mapping nanoV_top.$auto$alumacc.cc:485:replace_alu$2105.slice[0].carry ($lut).
Mapping nanoV_top.$auto$alumacc.cc:485:replace_alu$2105.slice[3].carry ($lut).
Mapping nanoV_top.$auto$alumacc.cc:485:replace_alu$2108.slice[0].carry ($lut).
Mapping nanoV_top.$auto$alumacc.cc:485:replace_alu$2108.slice[5].carry ($lut).
Mapping nanoV_top.$auto$alumacc.cc:485:replace_alu$2120.slice[16].carry ($lut).

10.39. Executing ICE40_OPT pass (performing simple optimizations).

10.39.1. Running ICE40 specific optimizations.

10.39.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module nanoV_top.
<suppressed ~188 debug messages>

10.39.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\nanoV_top'.
<suppressed ~705 debug messages>
Removed a total of 235 cells.

10.39.4. Executing OPT_DFF pass (perform DFF optimizations).

10.39.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \nanoV_top..
Removed 0 unused cells and 3139 unused wires.
<suppressed ~1 debug messages>

10.39.6. Rerunning OPT passes. (Removed registers in this run.)

10.39.7. Running ICE40 specific optimizations.

10.39.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module nanoV_top.

10.39.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\nanoV_top'.
Removed a total of 0 cells.

10.39.10. Executing OPT_DFF pass (perform DFF optimizations).

10.39.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \nanoV_top..

10.39.12. Finished OPT passes. (There is nothing left to do.)

10.40. Executing TECHMAP pass (map to technology primitives).

10.40.1. Executing Verilog-2005 frontend: /home/devel/oss-cad-suite/lib/../share/yosys/ice40/latches_map.v
Parsing Verilog input from `/home/devel/oss-cad-suite/lib/../share/yosys/ice40/latches_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Successfully finished Verilog frontend.

10.40.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

10.41. Executing Verilog-2005 frontend: /home/devel/oss-cad-suite/lib/../share/yosys/ice40/abc9_model.v
Parsing Verilog input from `/home/devel/oss-cad-suite/lib/../share/yosys/ice40/abc9_model.v' to AST representation.
Generating RTLIL representation for module `$__ICE40_CARRY_WRAPPER'.
Successfully finished Verilog frontend.

10.42. Executing ABC9 pass.

10.42.1. Executing ABC9_OPS pass (helper functions for ABC9).

10.42.2. Executing ABC9_OPS pass (helper functions for ABC9).

10.42.3. Executing SCC pass (detecting logic loops).
Found 0 SCCs in module nanoV_top.
Found 0 SCCs.

10.42.4. Executing ABC9_OPS pass (helper functions for ABC9).

10.42.5. Executing PROC pass (convert processes to netlists).

10.42.5.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

10.42.5.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

10.42.5.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

10.42.5.4. Executing PROC_INIT pass (extract init attributes).

10.42.5.5. Executing PROC_ARST pass (detect async resets in processes).

10.42.5.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

10.42.5.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

10.42.5.8. Executing PROC_DLATCH pass (convert process syncs to latches).

10.42.5.9. Executing PROC_DFF pass (convert process syncs to FFs).

10.42.5.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

10.42.5.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

10.42.5.12. Executing OPT_EXPR pass (perform const folding).

10.42.6. Executing TECHMAP pass (map to technology primitives).

10.42.6.1. Executing Verilog-2005 frontend: /home/devel/oss-cad-suite/lib/../share/yosys/techmap.v
Parsing Verilog input from `/home/devel/oss-cad-suite/lib/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu_brent_kung'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

10.42.6.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~126 debug messages>

10.42.7. Executing OPT pass (performing simple optimizations).

10.42.7.1. Executing OPT_EXPR pass (perform const folding).

10.42.7.2. Executing OPT_MERGE pass (detect identical cells).
Removed a total of 0 cells.

10.42.7.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Removed 0 multiplexer ports.

10.42.7.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
Performed a total of 0 changes.

10.42.7.5. Executing OPT_MERGE pass (detect identical cells).
Removed a total of 0 cells.

10.42.7.6. Executing OPT_DFF pass (perform DFF optimizations).

10.42.7.7. Executing OPT_CLEAN pass (remove unused cells and wires).

10.42.7.8. Executing OPT_EXPR pass (perform const folding).

10.42.7.9. Finished OPT passes. (There is nothing left to do.)

10.42.8. Executing TECHMAP pass (map to technology primitives).

10.42.8.1. Executing Verilog-2005 frontend: /home/devel/oss-cad-suite/lib/../share/yosys/abc9_map.v
Parsing Verilog input from `/home/devel/oss-cad-suite/lib/../share/yosys/abc9_map.v' to AST representation.
Successfully finished Verilog frontend.

10.42.8.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~2 debug messages>

10.42.9. Executing Verilog-2005 frontend: /home/devel/oss-cad-suite/lib/../share/yosys/abc9_model.v
Parsing Verilog input from `/home/devel/oss-cad-suite/lib/../share/yosys/abc9_model.v' to AST representation.
Generating RTLIL representation for module `$__ABC9_DELAY'.
Generating RTLIL representation for module `$__ABC9_SCC_BREAKER'.
Generating RTLIL representation for module `$__DFF_N__$abc9_flop'.
Generating RTLIL representation for module `$__DFF_P__$abc9_flop'.
Successfully finished Verilog frontend.

10.42.10. Executing ABC9_OPS pass (helper functions for ABC9).
<suppressed ~157 debug messages>

10.42.11. Executing ABC9_OPS pass (helper functions for ABC9).

10.42.12. Executing ABC9_OPS pass (helper functions for ABC9).
<suppressed ~2 debug messages>

10.42.13. Executing TECHMAP pass (map to technology primitives).

10.42.13.1. Executing Verilog-2005 frontend: /home/devel/oss-cad-suite/lib/../share/yosys/techmap.v
Parsing Verilog input from `/home/devel/oss-cad-suite/lib/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu_brent_kung'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

10.42.13.2. Continuing TECHMAP pass.
Using template $paramod$__ICE40_CARRY_WRAPPER\LUT=16'0110100110010110\I3_IS_CI=1'1 for cells of type $paramod$__ICE40_CARRY_WRAPPER\LUT=16'0110100110010110\I3_IS_CI=1'1.
Using template $paramod\SB_LUT4\LUT_INIT=16'0110100110010110 for cells of type SB_LUT4.
Using template SB_CARRY for cells of type SB_CARRY.
Using extmapper simplemap for cells of type $logic_or.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $logic_and.
No more expansions possible.
<suppressed ~146 debug messages>

10.42.14. Executing OPT pass (performing simple optimizations).

10.42.14.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module nanoV_top.
<suppressed ~4 debug messages>

10.42.14.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\nanoV_top'.
<suppressed ~29 debug messages>
Removed a total of 12 cells.

10.42.14.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \nanoV_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

10.42.14.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \nanoV_top.
Performed a total of 0 changes.

10.42.14.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\nanoV_top'.
Removed a total of 0 cells.

10.42.14.6. Executing OPT_DFF pass (perform DFF optimizations).

10.42.14.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \nanoV_top..
Removed 0 unused cells and 24 unused wires.
<suppressed ~1 debug messages>

10.42.14.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module nanoV_top.

10.42.14.9. Rerunning OPT passes. (Maybe there is more to do..)

10.42.14.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \nanoV_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

10.42.14.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \nanoV_top.
Performed a total of 0 changes.

10.42.14.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\nanoV_top'.
Removed a total of 0 cells.

10.42.14.13. Executing OPT_DFF pass (perform DFF optimizations).

10.42.14.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \nanoV_top..

10.42.14.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module nanoV_top.

10.42.14.16. Finished OPT passes. (There is nothing left to do.)

10.42.15. Executing AIGMAP pass (map logic to AIG).
Module nanoV_top: replaced 7 cells with 43 new cells, skipped 11 cells.
  replaced 2 cell types:
       2 $_OR_
       5 $_MUX_
  not replaced 3 cell types:
       8 $specify2
       1 $_NOT_
       2 $_AND_

10.42.16. Executing AIGMAP pass (map logic to AIG).
Module nanoV_top: replaced 847 cells with 4589 new cells, skipped 1329 cells.
  replaced 4 cell types:
     436 $_OR_
      27 $_XOR_
       8 $_ORNOT_
     376 $_MUX_
  not replaced 12 cell types:
       8 $scopeinfo
     179 $_NOT_
     257 $_AND_
     441 SB_DFF
      45 SB_DFFE
      47 SB_DFFSR
       9 SB_DFFSS
      90 SB_DFFESR
       9 SB_DFFESS
       1 SB_DFFN
     155 $paramod$__ABC9_DELAY\DELAY=32'00000000000000000000001000010010
      88 $paramod$__ICE40_CARRY_WRAPPER\LUT=16'0110100110010110\I3_IS_CI=1'1

10.42.16.1. Executing ABC9_OPS pass (helper functions for ABC9).

10.42.16.2. Executing ABC9_OPS pass (helper functions for ABC9).

10.42.16.3. Executing XAIGER backend.
<suppressed ~653 debug messages>
Extracted 1910 AND gates and 6188 wires from module `nanoV_top' to a netlist network with 654 inputs and 800 outputs.

10.42.16.4. Executing ABC9_EXE pass (technology mapping using ABC9).

10.42.16.5. Executing ABC9.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_lut <abc-temp-dir>/input.lut 
ABC: + read_box <abc-temp-dir>/input.box 
ABC: + &read <abc-temp-dir>/input.xaig 
ABC: + &ps 
ABC: <abc-temp-dir>/input : i/o =    654/    800  and =    1783  lev =   53 (2.55)  mem = 0.06 MB  box = 243  bb = 155
ABC: + &scorr 
ABC: Warning: The network is combinational.
ABC: + &sweep 
ABC: + &dc2 
ABC: + &dch -f 
ABC: + &ps 
ABC: <abc-temp-dir>/input : i/o =    654/    800  and =    2669  lev =   43 (2.24)  mem = 0.07 MB  ch =  350  box = 239  bb = 155
ABC: + &if -W 750 -v 
ABC: K = 4. Memory (bytes): Truth =    0. Cut =   52. Obj =  136. Set =  564. CutMin = no
ABC: Node =    2669.  Ch =   299.  Total mem =    0.73 MB. Peak cut mem =    0.06 MB.
ABC: P:  Del = 27817.00.  Ar =     717.0.  Edge =     2585.  Cut =    16405.  T =     0.00 sec
ABC: P:  Del = 27817.00.  Ar =     683.0.  Edge =     2525.  Cut =    15387.  T =     0.00 sec
ABC: P:  Del = 27817.00.  Ar =     615.0.  Edge =     2142.  Cut =    17236.  T =     0.00 sec
ABC: F:  Del = 27817.00.  Ar =     568.0.  Edge =     2024.  Cut =    15430.  T =     0.00 sec
ABC: A:  Del = 27817.00.  Ar =     542.0.  Edge =     1865.  Cut =    15986.  T =     0.01 sec
ABC: A:  Del = 27817.00.  Ar =     534.0.  Edge =     1853.  Cut =    15805.  T =     0.01 sec
ABC: Total time =     0.03 sec
ABC: + &write -n <abc-temp-dir>/output.aig 
ABC: + &mfs 
ABC: + &ps -l 
ABC: <abc-temp-dir>/input : i/o =    654/    800  and =    1658  lev =   39 (2.10)  mem = 0.06 MB  box = 235  bb = 155
ABC: Mapping (K=4)  :  lut =    529  edge =    1815  lev =   15 (1.06)  Boxes are not in a topological order. Switching to level computation without boxes.
ABC: levB =   39  mem = 0.03 MB
ABC: LUT = 529 : 2=73 13.8 %  3=155 29.3 %  4=301 56.9 %  Ave = 3.43
ABC: + &write -n <abc-temp-dir>/output.aig 
ABC: + time 
ABC: elapse: 0.41 seconds, total: 0.41 seconds

10.42.16.6. Executing AIGER frontend.
<suppressed ~2928 debug messages>
Removed 2342 unused cells and 4790 unused wires.

10.42.16.7. Executing ABC9_OPS pass (helper functions for ABC9).
ABC RESULTS:              $lut cells:      537
ABC RESULTS:   $paramod$__ICE40_CARRY_WRAPPER\LUT=16'0110100110010110\I3_IS_CI=1'1 cells:       80
ABC RESULTS:           input signals:       37
ABC RESULTS:          output signals:      250
Removing temp directory.

10.42.17. Executing TECHMAP pass (map to technology primitives).

10.42.17.1. Executing Verilog-2005 frontend: /home/devel/oss-cad-suite/lib/../share/yosys/abc9_unmap.v
Parsing Verilog input from `/home/devel/oss-cad-suite/lib/../share/yosys/abc9_unmap.v' to AST representation.
Generating RTLIL representation for module `\$__DFF_x__$abc9_flop'.
Generating RTLIL representation for module `\$__ABC9_SCC_BREAKER'.
Successfully finished Verilog frontend.

10.42.17.2. Continuing TECHMAP pass.
Using template $paramod$__ICE40_CARRY_WRAPPER\LUT=16'0110100110010110\I3_IS_CI=1'1 for cells of type $paramod$__ICE40_CARRY_WRAPPER\LUT=16'0110100110010110\I3_IS_CI=1'1.
No more expansions possible.
<suppressed ~86 debug messages>

10.43. Executing ICE40_WRAPCARRY pass (wrap carries).

10.44. Executing TECHMAP pass (map to technology primitives).

10.44.1. Executing Verilog-2005 frontend: /home/devel/oss-cad-suite/lib/../share/yosys/ice40/ff_map.v
Parsing Verilog input from `/home/devel/oss-cad-suite/lib/../share/yosys/ice40/ff_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFFCE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP1P_'.
Successfully finished Verilog frontend.

10.44.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~22 debug messages>
Removed 101 unused cells and 7114 unused wires.

10.45. Executing OPT_LUT pass (optimize LUTs).
Discovering LUTs.
Number of LUTs:      600
  1-LUT                8
  2-LUT               81
  3-LUT              210
  4-LUT              301
  with \SB_CARRY    (#0)   55
  with \SB_CARRY    (#1)   56

Eliminating LUTs.
Number of LUTs:      600
  1-LUT                8
  2-LUT               81
  3-LUT              210
  4-LUT              301
  with \SB_CARRY    (#0)   55
  with \SB_CARRY    (#1)   56

Combining LUTs.
Number of LUTs:      579
  1-LUT                8
  2-LUT               74
  3-LUT              177
  4-LUT              320
  with \SB_CARRY    (#0)   55
  with \SB_CARRY    (#1)   56

Eliminated 0 LUTs.
Combined 21 LUTs.
<suppressed ~3386 debug messages>

10.46. Executing TECHMAP pass (map to technology primitives).

10.46.1. Executing Verilog-2005 frontend: /home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/home/devel/oss-cad-suite/lib/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

10.46.2. Continuing TECHMAP pass.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00010000 for cells of type $lut.
Using template $paramod$5e9374f44a27c3f8a1c38af244ec43ceb4fb8d4f\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0100 for cells of type $lut.
Using template $paramod$658b9ed803f0d3d335616d3858b53e0a2522f1e8\$lut for cells of type $lut.
Using template $paramod$30305e55a780880b9c824fe3509a4d981acb0f2b\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0001 for cells of type $lut.
Using template $paramod$dc1a61f285e61468b65396f7d9c7516efaccffca\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11001010 for cells of type $lut.
Using template $paramod$74190755306950a81a07803293f7549508f6f157\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1000 for cells of type $lut.
Using template $paramod$6b0849254d6c87461fb93e37cc18f089f61eb912\$lut for cells of type $lut.
Using template $paramod$fd904e9e35cfd343a9df248824bd3f1408724879\$lut for cells of type $lut.
Using template $paramod$f9813472aa48e533b3838c6f2316dc2e78c66111\$lut for cells of type $lut.
Using template $paramod$00b8dd8b73561ad6988b03b6600fc178778f4822\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01000000 for cells of type $lut.
Using template $paramod$c958b3a888f937f082b94811ff62d71e32a2b4eb\$lut for cells of type $lut.
Using template $paramod$c217e185eb8e6463ca272982ba8c5940fa90d81f\$lut for cells of type $lut.
Using template $paramod$a81cf453a316218febe7a33c0cf3157f69dfa7dc\$lut for cells of type $lut.
Using template $paramod$436f5b2a701f46b4f2c40432561ff700e1d0a2c0\$lut for cells of type $lut.
Using template $paramod$018d71a0fe325d6362687fe53ac13dd6340e400d\$lut for cells of type $lut.
Using template $paramod$9e354de8d358bf081aa0c089488ea3bc5b7c2fd9\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10000000 for cells of type $lut.
Using template $paramod$728e616c918eb05878d70b2bb240e381ea2847b9\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10001011 for cells of type $lut.
Using template $paramod$272652f6c6fbe9a75eff76e45cc7e2788835518b\$lut for cells of type $lut.
Using template $paramod$66caeb00a39d236782a97659e3bd99621b74681b\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000001 for cells of type $lut.
Using template $paramod$db08fd84fb3c4d6a41eaec6adfffe445fb7eb17f\$lut for cells of type $lut.
Using template $paramod$5502a85110dbca29ac631107f0b0635e7fade476\$lut for cells of type $lut.
Using template $paramod$a1d323730045824cfc84bb9f4ee8031f1c4dcc9e\$lut for cells of type $lut.
Using template $paramod$e6a488add0b5a2d742e2ae29f62ce7616e04271d\$lut for cells of type $lut.
Using template $paramod$1bb2fc47b457abe7e28b98cfa3441b6432237f90\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10001101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10000010 for cells of type $lut.
Using template $paramod$c28a8b7ce0535d090c4cfb52e9c74affd52b110c\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00010011 for cells of type $lut.
Using template $paramod$c1a19a87ccbbb03d43a72335db63f692ddf82cc1\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00101110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000010 for cells of type $lut.
Using template $paramod$f85f1073c412d406200a6a72283f918c8b751314\$lut for cells of type $lut.
Using template $paramod$9c7a967a5dd69d8b7070c7493295b0c7b420660f\$lut for cells of type $lut.
Using template $paramod$b009a26b33c3ca109c016cf968a774c0d66687bb\$lut for cells of type $lut.
Using template $paramod$c6a0421f5b5114b68e9782f0585d571421cf8f01\$lut for cells of type $lut.
Using template $paramod$1b53a9695a0f80de7517b50863b438fd2b7f56da\$lut for cells of type $lut.
Using template $paramod$620586420e818d3afa7e5b51fcf19f5c6ea83ad4\$lut for cells of type $lut.
Using template $paramod$153c6cdaaddbc43e6ef3facd06aa851de33910ae\$lut for cells of type $lut.
Using template $paramod$e5758a88c2c156ccb3037f71a73d1b15af5b310d\$lut for cells of type $lut.
Using template $paramod$b8c12e9f20286ec99dd92b2fd58c920f7e7cec0f\$lut for cells of type $lut.
Using template $paramod$2ea69c779d6c1b79ac5a87b0d1523c67d5628dba\$lut for cells of type $lut.
Using template $paramod$fdcae86fcfd036c1880a04306ae771a9d7579c31\$lut for cells of type $lut.
Using template $paramod$df23d368a6ae8908771963811f5ab56f622887ca\$lut for cells of type $lut.
Using template $paramod$101238f3d8d49ab12a9b49a2f01cd503b26e9c61\$lut for cells of type $lut.
Using template $paramod$238ce1c123ccd5620a61157a2c5350ee6fc4d4ff\$lut for cells of type $lut.
Using template $paramod$6c51c1ba6c39f0c09b896d52432b366f116bd3c1\$lut for cells of type $lut.
Using template $paramod$f24ba3ced4b870f8e829f5ac5a8af88573350e6f\$lut for cells of type $lut.
Using template $paramod$6f20c26c0721e8b3757ca7b9a77b6e1d35f0f91c\$lut for cells of type $lut.
Using template $paramod$5c269c7ae8ebe8ae616b450420108fd8f1bac4c4\$lut for cells of type $lut.
Using template $paramod$0d94766b8f50ae8b32739d9cec096f2c5d44402a\$lut for cells of type $lut.
Using template $paramod$f7cbd8f5974233f70d25c33ef6a692898e4f6377\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11010000 for cells of type $lut.
Using template $paramod$8f7210088a40da1859d27e900c288fd298d68bed\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10101000 for cells of type $lut.
Using template $paramod$4658fedcd7ebe2858c93f54b88221dcf68c6bb6c\$lut for cells of type $lut.
Using template $paramod$5c9d981f79c4f2253671e2dbd39b499f63da5a32\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001110 for cells of type $lut.
Using template $paramod$7c3833e617307006af30409ed68b65a011a1121e\$lut for cells of type $lut.
Using template $paramod$80ee1a1ef5371eeb9b75203f541fdb5d5fbc4517\$lut for cells of type $lut.
Using template $paramod$3ff6a1fff32547966eb80e0eede4847129513708\$lut for cells of type $lut.
Using template $paramod$54a853cac0e65b945d96d7dd0e9cca8bb9f3a21e\$lut for cells of type $lut.
Using template $paramod$e0a9e117b6e7aedbdcd1b22056a2b3b93781438f\$lut for cells of type $lut.
Using template $paramod$70938355506e8db1c27e2585b4ca3dab3f99aca4\$lut for cells of type $lut.
Using template $paramod$571404c0889eaf57f492cb5e37f8acb5df5852f9\$lut for cells of type $lut.
Using template $paramod$e51a8a571bee774247b38f52d6e85fd62ae52cea\$lut for cells of type $lut.
Using template $paramod$a5516fc31d1e552de2435200bb732b4d4ad63a9c\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11010101 for cells of type $lut.
Using template $paramod$6d6beead1425af15cf78b27fd9b11b41b5d4bce8\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11011111 for cells of type $lut.
Using template $paramod$d6ca727e39f31d51d29072e0f33aa09c65e37336\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0111 for cells of type $lut.
Using template $paramod$a584b7b837e345f02b84b59cd30fcecc11fb5f26\$lut for cells of type $lut.
Using template $paramod$e5759512db67494ff77fbdfc66dff4006376568f\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01110000 for cells of type $lut.
Using template $paramod$849d013d096d73269ca4beb768f8e399745d37f2\$lut for cells of type $lut.
Using template $paramod$f5f41ee5d60dede31a2b59f58ec46b167939d713\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11001110 for cells of type $lut.
Using template $paramod$adc0b354bb960519a616db7423a6274fc380540e\$lut for cells of type $lut.
Using template $paramod$72d04cda0ad63fcea17225ad4256bc664683b513\$lut for cells of type $lut.
Using template $paramod$7b082453f8f50d473c2ca98926eb119a6094bfa4\$lut for cells of type $lut.
Using template $paramod$a59507d273cd827eb6c46c37820d50a1b717efdf\$lut for cells of type $lut.
Using template $paramod$faa7f9f0b1344e7b54940d0d59e4690d758ed50b\$lut for cells of type $lut.
Using template $paramod$364c9ffbffac467d60dfec81bba4e18476c15602\$lut for cells of type $lut.
Using template $paramod$6e238df02989b317f10820a22773676e71120644\$lut for cells of type $lut.
Using template $paramod$733f55a5531d9375efc406ec64b57604c3ff67d5\$lut for cells of type $lut.
Using template $paramod$066c8b79539c6cc144c5af6a60f411ebf4e1a8d9\$lut for cells of type $lut.
Using template $paramod$b2413b28513b8adc3fa81604e30e466cb60b4e87\$lut for cells of type $lut.
Using template $paramod$47a8214374025465e226fa66bee690ff33268a25\$lut for cells of type $lut.
Using template $paramod$fe7077462a386258cea7b409718bda7873cfae08\$lut for cells of type $lut.
Using template $paramod$ee027be034f17b4a3101947a266b05925d77c12f\$lut for cells of type $lut.
Using template $paramod$20101243cb2a32d725e9b250e900ec2b3e881baf\$lut for cells of type $lut.
Using template $paramod$8b24407096beec47292ddeb1567a058197a320b9\$lut for cells of type $lut.
Using template $paramod$e57bcb018bfe8170bc04f13a73befe2def28cdf3\$lut for cells of type $lut.
Using template $paramod$b45e5cb971154e30a797eecb0461619c3eeae12d\$lut for cells of type $lut.
Using template $paramod$d8021370f0670d331038a0473505efae4dff2706\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00110101 for cells of type $lut.
Using template $paramod$9264cd5418c36d754331aa206e64072e8dbf89db\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000001\LUT=2'01 for cells of type $lut.
Using template $paramod$0de052767abdccc3aefc818722bdc3c7850d25d6\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00110001 for cells of type $lut.
Using template $paramod$431a6af0106551bef3f78844fbb0409941437676\$lut for cells of type $lut.
Using template $paramod$e5e9da8fed769f971686eed8c5eea50e61f73aaa\$lut for cells of type $lut.
Using template $paramod$0d071d27f3877011b8f57bb192a0c9818b7c9cac\$lut for cells of type $lut.
Using template $paramod$6842b8b2a2a38d0fdb35de972b4ce1a464745b17\$lut for cells of type $lut.
Using template $paramod$8fd8efe0a495790cc9ddc97266933ea8a8cd7b45\$lut for cells of type $lut.
Using template $paramod$4385b611926e5c0509dba4de58311d325da0ff0d\$lut for cells of type $lut.
Using template $paramod$ab8bb87959c5d7cfa27886cee1355b38e054a61a\$lut for cells of type $lut.
Using template $paramod$7491e7206ae8c682d288373efe06a43b67c277cf\$lut for cells of type $lut.
Using template $paramod$973818279bc95792902f3c09371fd2407d04a2a5\$lut for cells of type $lut.
Using template $paramod$eec22efc31481e6a2706a92743e67f4f90bad45a\$lut for cells of type $lut.
Using template $paramod$6be53ab59e0a69757fc32adb071ddcb64e8c87b6\$lut for cells of type $lut.
Using template $paramod$47d363ae7b1a0e81207e02fe31af85b6bf36a2ac\$lut for cells of type $lut.
Using template $paramod$ea5280fce2698f0f291737e66fca69a1d9d058e1\$lut for cells of type $lut.
Using template $paramod$694c95659b447cef99dd4cdbd49b87dfd5f6c806\$lut for cells of type $lut.
Using template $paramod$648d5b3c4c08a2b5e6752f60f9134dd7da5b02b9\$lut for cells of type $lut.
Using template $paramod$5a2475f0ff8adfa6c48e46c1977dad3962daa33d\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00110010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01010001 for cells of type $lut.
Using template $paramod$37c9af120c85145419565a9ccf4ceb7397fbbe92\$lut for cells of type $lut.
Using template $paramod$498daa9936ffa1c0b12d774cacc95a35d14b818e\$lut for cells of type $lut.
Using template $paramod$d5c7dda3e544463bf43ed73dadb51262f5dcf2fe\$lut for cells of type $lut.
Using template $paramod$70a934594406e8042bf2854c778fef542ef3ea5f\$lut for cells of type $lut.
Using template $paramod$ee454ad2383885733a4273245816698f8443c10b\$lut for cells of type $lut.
Using template $paramod$cdc5bba2585477f1744fd1f869bebc8beb23d707\$lut for cells of type $lut.
Using template $paramod$d9c3d189aabf20520d672302e8d5bb485224c507\$lut for cells of type $lut.
Using template $paramod$682dcf7a44e09cdf417bc55247ac658426f4c8e6\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00011011 for cells of type $lut.
Using template $paramod$aab54572d5ffecd31253b36e73e9cb718d05be34\$lut for cells of type $lut.
Using template $paramod$41326ad8644342a66dfb051d050f2b6fbf15015b\$lut for cells of type $lut.
Using template $paramod$81d8a60fd95b1a9f9ef71c12a774ae6988cb9fd5\$lut for cells of type $lut.
Using template $paramod$1241d759e3df4cac11dc7c99c36b0d1b07f7a673\$lut for cells of type $lut.
Using template $paramod$4fd3428c4b8b1accf8f8fb4bb88555a2b5fa688d\$lut for cells of type $lut.
Using template $paramod$f610396a8c1614f373f4d73e3d1e988bc93e396c\$lut for cells of type $lut.
Using template $paramod$3522f1d26c580a319bce031486a08aaccf939bbb\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00100011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01001000 for cells of type $lut.
Using template $paramod$380a4cc99a48ce45df498fc04bf683d63848289c\$lut for cells of type $lut.
Using template $paramod$6c131dbd3189e961f911209363392f5174acab62\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10101100 for cells of type $lut.
Using template $paramod$0397a04659c00318ae76496d241f1d2991537883\$lut for cells of type $lut.
Using template $paramod$1a0bf6a2024582c33687c0149caac1d863a39438\$lut for cells of type $lut.
Using template $paramod$2af7fd5c408581c2b6e80048f54948ce05a232f8\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10101001 for cells of type $lut.
Using template $paramod$0e021b5ab9c9dffe82b887dcb2beb3fac2b87759\$lut for cells of type $lut.
Using template $paramod$58bd588a49a6a3b9d057d75f907cb4932e1635f6\$lut for cells of type $lut.
Using template $paramod$82b4a585d1edcb5c6e755dc9bd3392228a1c1304\$lut for cells of type $lut.
Using template $paramod$25a37afc3ed125174a215f4839f670daa21ccc96\$lut for cells of type $lut.
Using template $paramod$7295da7c5b19f528a428229f2570e0a23ad372af\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1110 for cells of type $lut.
Using template $paramod$ef26adabe6060e01077b576cfe34e95e55a26aef\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11111110 for cells of type $lut.
Using template $paramod$583294f05aaec818beb341e1ee966bc090a0a81c\$lut for cells of type $lut.
Using template $paramod$975817b14e428934970c836668538a3bbe3dd485\$lut for cells of type $lut.
Using template $paramod$bc9180cdfcd49ad6f178d338e90551ccba0f90ae\$lut for cells of type $lut.
Using template $paramod$cce6b847e730f5f1cfb4a8ef6c78f9f44e4f1145\$lut for cells of type $lut.
Using template $paramod$403b99366931b2a9b7deeb1fa8a8350e14d4d059\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10100011 for cells of type $lut.
Using template $paramod$4e2c6702ac4e04ec09e98452472aa90e68ad31d4\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01011101 for cells of type $lut.
Using template $paramod$a3d9d50a26c80b5c42d9b864ac52f329113a426e\$lut for cells of type $lut.
Using template $paramod$e9c77024ca501b890c641f9c0b10e27242db8730\$lut for cells of type $lut.
Using template $paramod$865395c0228487a64a8e4011cecafc2c64b79f2b\$lut for cells of type $lut.
Using template $paramod$be48d952fcad8a16b8d84daa4c48a3065f343e5e\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11111000 for cells of type $lut.
Using template $paramod$afbb78ea2f898aa3cffa65de18f43b6b53d33ce1\$lut for cells of type $lut.
Using template $paramod$9a6965d4f53d69e345bd8d48283856520a30225e\$lut for cells of type $lut.
Using template $paramod$4133fe00eb18442862a284ccc67a95f8194d041c\$lut for cells of type $lut.
Using template $paramod$0e7ce19e5da99c6675c7a5220f7cc55270b24ac0\$lut for cells of type $lut.
Using template $paramod$b93d1ea7a612a32c185108f67a153d44ffb9aac2\$lut for cells of type $lut.
Using template $paramod$c471af5667a682bd131a5b479e58e470d1b2b7cd\$lut for cells of type $lut.
Using template $paramod$c06719f99ed1c67d72c3f94e73ae56886c08c887\$lut for cells of type $lut.
Using template $paramod$8c24dc0cdd336b7fb88bbf7eed45cec5cbae862b\$lut for cells of type $lut.
Using template $paramod$766f851776a2d25e13728c9147ddfe7ff70917a3\$lut for cells of type $lut.
Using template $paramod$f7e977e4ab769956ecac4448595a773db86c44e8\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00101111 for cells of type $lut.
Using template $paramod$98162d862d449f7c67182f5a43cdfe4123defff8\$lut for cells of type $lut.
Using template $paramod$a988852add2bdce7c1dfac786401ba7c7bc832c1\$lut for cells of type $lut.
Using template $paramod$59b375e10bd4301e2259d11660b85c6a4198ad14\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11000100 for cells of type $lut.
Using template $paramod$aff3a645bb9f572421a4f0f49cf8987ceb4bcdc5\$lut for cells of type $lut.
Using template $paramod$464d286cc302627c2e44b6c4a8450c9bebc28389\$lut for cells of type $lut.
Using template $paramod$b64f67334ae26f46c0a2480c39b1cfb8a26d9038\$lut for cells of type $lut.
Using template $paramod$b68f9800cc1bf69afcfbc0567a25e43ebb01456c\$lut for cells of type $lut.
Using template $paramod$d11fd0cafe28c6509f05d39c9d5671060ee4e821\$lut for cells of type $lut.
Using template $paramod$90edad2b6a4dec5adef9ce6a532f7a1edb48db32\$lut for cells of type $lut.
Using template $paramod$8614da24b3846fe751594d00fba789cfcb7b874c\$lut for cells of type $lut.
Using template $paramod$8e44661def013b6bf9fe6f8b049ef2c838d749f9\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11101000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0110 for cells of type $lut.
Using template $paramod$c5479cb3b02237832e868d4808b3a7f1be08f618\$lut for cells of type $lut.
Using template $paramod$76be5a5900f80a135961ac09b0cf70ec8308af2c\$lut for cells of type $lut.
Using template $paramod$9bfe1886af55ab8065e0fb6a586fb9a29caf058d\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11000110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01010011 for cells of type $lut.
No more expansions possible.
<suppressed ~3351 debug messages>
Removed 0 unused cells and 1337 unused wires.

10.47. Executing AUTONAME pass.
Renamed 19205 objects in module nanoV_top (75 iterations).
<suppressed ~1655 debug messages>

10.48. Executing HIERARCHY pass (managing design hierarchy).
Attribute `top' found on module `nanoV_top'. Setting top module to nanoV_top.

10.48.1. Analyzing design hierarchy..
Top module:  \nanoV_top

10.48.2. Analyzing design hierarchy..
Top module:  \nanoV_top
Removed 0 unused modules.

10.49. Printing statistics.

=== nanoV_top ===

   Number of wires:                521
   Number of wire bits:           2972
   Number of public wires:         521
   Number of public wire bits:    2972
   Number of ports:                 11
   Number of port bits:             25
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1301
     $scopeinfo                      8
     SB_CARRY                       72
     SB_DFF                        441
     SB_DFFE                        45
     SB_DFFESR                      90
     SB_DFFESS                       9
     SB_DFFN                         1
     SB_DFFSR                       47
     SB_DFFSS                        9
     SB_LUT4                       579

10.50. Executing CHECK pass (checking for obvious problems).
Checking module nanoV_top...
Found and reported 0 problems.

10.51. Executing JSON backend.

Warnings: 1 unique messages, 1 total
End of script. Logfile hash: 6134dfaaa9, CPU: user 2.93s system 0.01s, MEM: 50.62 MB peak
Yosys 0.47+135 (git sha1 6f3376cbe, aarch64-linux-gnu-g++ 11.4.0-1ubuntu1~22.04 -fPIC -O3)
Time spent: 15% 37x read_verilog (0 sec), 13% 27x opt_clean (0 sec), ...
